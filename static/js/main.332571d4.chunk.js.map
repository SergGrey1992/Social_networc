{"version":3,"sources":["redux/dialogs_reducer.ts","assect/user_Photo.jpg","HOC/withAuthRedirect.tsx","utils/objects_helper/objects_helper.ts","redux/users_reducer.ts","Components/Profile/Profile.module.css","common/FormsControls/FormsControls.tsx","api/api.ts","Components/NavBar/NavBar.module.css","Components/NavBar/Sidebar/SideFriend/SideFriend.tsx","Components/NavBar/Sidebar/Sidebar.tsx","Components/NavBar/NavBar.tsx","Components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","Components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.tsx","Components/Profile/ProfileInfo/ProfileInfo.tsx","redux/profile_reducer.ts","Components/Profile/MyPosts/Post/Post.tsx","Components/Profile/MyPosts/MyPostMessage/MyPostsMessageTextarea.tsx","Components/Profile/MyPosts/MyPostMessage/MyPostsMessageContainer.tsx","Components/Profile/MyPosts/MyPosts.tsx","Components/Profile/MyPosts/MyPostsContainer.tsx","Components/Profile/Profile.tsx","Components/Profile/ProfileContainer.tsx","Components/Header/Header.tsx","redux/auth_reducer.ts","Components/Header/HeaderContainer.tsx","Components/Login/Login.tsx","Components/Login/LoginContainer.tsx","redux/app_reducer.ts","App.tsx","redux/SideBar_reducer.ts","redux/redux_store.ts","index.tsx","utils/validators/vaidators.ts","Components/NavBar/Sidebar/SideFriend/SideFriend.module.css","Components/Profile/ProfileInfo/DescriptionBlock.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/Header/Header.module.css","assect/preLoader.svg","common/PreLoader/PreLoader.tsx","Components/NavBar/Sidebar/Sidebar.module.css","Components/Profile/MyPosts/MyPosts.module.css","common/FormsControls/FormsControls.module.css"],"names":["addMessage","formData","type","ADD_MESSAGE","changeMessageText","valueTextarea","CHANGE_MESSAGE_TEXT","newMessageText","initialState","messages","id","message","dialogs","name","dialogsReducer","state","action","withAuthRedirect","Component","this","props","auth","to","React","updateObjInArray","items","itemId","objProp","newObjProps","map","item","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_COUNT","TOGGELE_IS_FETCHING","TOGGELE_IS_FOLLOWING_PROGRESS","followSuccess","userID","unFollowSuccess","setCurrentPage","currentPageNumber","toggleIsFetching","isFetching","toggleFollowingProgress","getUsers","currentPage","pageSize","dispatch","a","usersAPI","data","users","totalCount","followUnfollowFlow","usersID","apiMethod","actionCreator","resultCode","follow","followedUser","bind","unFollow","unFollowedUser","totalUsersCount","portionSize","followingInProgress","usersReducer","followed","u","filter","module","exports","FormControl","meta","touched","error","children","hasError","className","style","formControl","Textarea","input","restProps","child","Input","createField","placeholder","component","validate","text","instance","axios","create","withCredentials","baseURL","headers","get","then","response","delete","post","getProfile","userId","profileAPI","authAPI","me","login","logOut","getStatus","updateStatus","status","put","savePhoto","file","FormData","append","SideFriend","side","figure","avatar","alt","src","activeClassName","activeLink","SidebarContainer","connect","sideState","sideBarReducer","friendsAsideElement","asideState","asideFriends","friends","index","aside","asideH","wrapperAside","Navbar","nav","ProfileStatusWithHooks","useState","editMode","setEditMode","statusS","setStatusS","useEffect","onDoubleClick","value","autoFocus","onChange","e","currentTarget","onBlur","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","onSubmit","ProfileInfo","profile","isOwner","Object","keys","length","PreLoader","wrapperDescription","styleH1","photos","small","userPhoto","target","files","toEditMode","description","Contacts","contactTitle","contactValue","ProfileData","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contacts","key","ADD_POST","DELETE_POST","CHANGE_POST_TEXT","SET_USER_PROFILE","SET_STATUS","UPDATE_STATUS","SAVE_PHOTO_SUCCESS","addPost","setUserStatus","posts","likesCount","newPostText","profileReducer","p","postId","Post","wrapperItemCard","wrapperLike","maxLength10","maxLengthCreator","MyPostMessageReduxForm","Field","required","postMessage","MyPosts","memo","console","log","postsElement","wrapperItem","styleH3","postAdding","MyPostsMessageContainer","MyPostsContainer","changePostText","Profile","wrapperProfile","ProfileContainer","match","params","authorizedUserId","history","push","refreshProfile","prevProps","prevState","compose","isAuth","res","withRouter","Header","logOutMe","wrapperHeader","img","loginBlock","info","SET_USER_DATA","LOGIN_ME","LOG_OUT","ERROR_MESSAGE_REDUCER","setUserData","email","setError","messError","getAuthUserData","errorMessages","isError","authReducer","HeaderContainer","WithUrlDataContainerComponent","LoginReduxForm","errorBool","getLoginMe","stopSubmit","_error","INITIALIZED_SUCCESS","intialized","appReducer","DialogsContainer","lazy","UsersContainer","App","initializeApp","path","render","LoginContainer","fallback","app","promise","Promise","all","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById","maxLength","preLoader"],"mappings":"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","file":"static/js/main.332571d4.chunk.js","sourcesContent":["export const addMessage = ( formData: string ) => {\r\n  return {type: ADD_MESSAGE, formData} as const\r\n}\r\n\r\nexport const changeMessageText = (valueTextarea: string) => {\r\n  return {type: CHANGE_MESSAGE_TEXT, newMessageText: valueTextarea} as const\r\n}\r\n\r\nconst CHANGE_MESSAGE_TEXT = \"CHANGE_MESSAGE_TEXT\"\r\nconst ADD_MESSAGE = \"ADD_MESSAGE\";\r\n\r\nexport type ActionType =\r\n  ReturnType<typeof addMessage> |\r\n  ReturnType<typeof changeMessageText>\r\n\r\ntype DialogType = {\r\n  id: number\r\n  name: string\r\n}\r\ntype MessageType = {\r\n  id: number\r\n  message: string\r\n}\r\n\r\nexport type InitialStateType = {\r\n  messages: Array<MessageType>\r\n  dialogs: Array<DialogType>\r\n  newMessageText: string\r\n}\r\n\r\nlet initialState = {\r\n  messages: [\r\n    {id: 1, message: \"HI, brother!\"},\r\n    {id: 2, message: \"Wtf\"},\r\n    {id: 3, message: \"I love you\"},\r\n    {id: 4, message: \"Where is my money?\"},\r\n  ],\r\n  dialogs: [\r\n    {id: 1, name: \"Dzimych\"},\r\n    {id: 2, name: \"Sveta\"},\r\n    {id: 3, name: \"Pasha\"},\r\n    {id: 4, name: \"Gleb\"},\r\n    {id: 5, name: \"Vika\"}\r\n  ],\r\n  newMessageText: ''\r\n}\r\n\r\nconst dialogsReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n  switch (action.type) {\r\n    case ADD_MESSAGE:\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, {id: 5, message: action.formData}],\r\n        newMessageText: ''\r\n      }\r\n    case CHANGE_MESSAGE_TEXT:\r\n      return {\r\n        ...state,\r\n        newMessageText: action.newMessageText\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport default dialogsReducer;","export default __webpack_public_path__ + \"static/media/user_Photo.62a5ed40.jpg\";","import React, {ComponentType} from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nexport function withAuthRedirect<T extends object>(Component: ComponentType<T>) {\r\n\tclass RedirectComponent extends React.Component<T & { auth: boolean }> {\r\n\t\trender() {\r\n\t\t\tif (!this.props.auth) return <Redirect to='/login'/>\r\n\t\t\treturn <Component {...this.props}/>\r\n\t\t}\r\n\t}\r\n\treturn RedirectComponent\r\n}","type OptionalType<T> ={\r\n\t[Property in keyof T]?: T[Property]\r\n}\r\nexport const updateObjInArray = <T>(items: Array<T>,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t itemId: T[keyof T],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t objProp: keyof T,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t newObjProps: OptionalType<T>) => {\r\n\treturn items.map(item => {\r\n\t\treturn item[objProp] === itemId ? {...item, ...newObjProps} : item\r\n\t})\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {updateObjInArray} from \"../utils/objects_helper/objects_helper\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_COUNT = \"SET_TOTAL_COUNT\";\r\nconst TOGGELE_IS_FETCHING = \"TOGGELE_IS_FETCHING\";\r\nconst TOGGELE_IS_FOLLOWING_PROGRESS = \"TOGGELE_IS_FOLLOWING_PROGRESS\";\r\nexport const followSuccess = (userID: number) => {\r\n\treturn {type: FOLLOW, userID} as const\r\n}\r\nexport const unFollowSuccess = (userID: number) => {\r\n\treturn {type: UNFOLLOW, userID} as const\r\n}\r\nexport const setUsers = (users: Array<usersType>) => {\r\n\treturn {type: SET_USERS, users} as const\r\n}\r\nexport const setCurrentPage = (currentPageNumber: number) => {\r\n\treturn {type: SET_CURRENT_PAGE, currentPageNumber} as const\r\n}\r\nexport const setTotalCount = (totalCount: number) => {\r\n\treturn {type: SET_TOTAL_COUNT, totalCount} as const\r\n}\r\nexport const toggleIsFetching = (isFetching: boolean) => {\r\n\treturn {type: TOGGELE_IS_FETCHING, isFetching} as const\r\n}\r\nexport const toggleFollowingProgress = (isFetching: boolean, userID: number) => {\r\n\treturn {type: TOGGELE_IS_FOLLOWING_PROGRESS, isFetching, userID} as const\r\n}\r\nexport const getUsers = (currentPage: number, pageSize: number) => async (dispatch: Dispatch) => {\r\n\tdispatch(toggleIsFetching(true))\r\n\tdispatch(setCurrentPage(currentPage))\r\n\tlet data = await usersAPI.getUsers(currentPage, pageSize)\r\n\tdispatch(toggleIsFetching(false))\r\n\tdispatch(setUsers(data.items))\r\n\tdispatch(setTotalCount(data.totalCount))\r\n}\r\nconst followUnfollowFlow = async (dispatch: Dispatch,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tusersID: number,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tapiMethod: any,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tactionCreator: any\r\n) => {\r\n\tdispatch(toggleFollowingProgress(true, usersID))\r\n\tlet data = await apiMethod(usersID)\r\n\tif (data.resultCode === 0) {\r\n\t\tdispatch(actionCreator(usersID))\r\n\t}\r\n\tdispatch(toggleFollowingProgress(false, usersID))\r\n}\r\n//1 option\r\nexport const follow = (usersID: number) => async (dispatch: Dispatch) => {\r\n\tlet apiMethod = usersAPI.followedUser.bind(usersAPI)\r\n\tlet actionCreator = followSuccess\r\n\tawait followUnfollowFlow(dispatch, usersID, apiMethod, actionCreator)\r\n}\r\n//2 option\r\nexport const unFollow = (usersID: number) => async (dispatch: Dispatch) => {\r\n\tawait followUnfollowFlow(dispatch, usersID, usersAPI.unFollowedUser.bind(usersAPI), unFollowSuccess)\r\n}\r\nexport type ActionType =\r\n\tReturnType<typeof setUsers> |\r\n\tReturnType<typeof followSuccess> |\r\n\tReturnType<typeof unFollowSuccess> |\r\n\tReturnType<typeof setCurrentPage> |\r\n\tReturnType<typeof setTotalCount> |\r\n\tReturnType<typeof toggleIsFetching> |\r\n\tReturnType<typeof toggleFollowingProgress>\r\nexport type usersType = {\r\n\tname: string\r\n\tid: number\r\n\tphotos: photosType\r\n\tstatus: string | null\r\n\tfollowed: boolean\r\n}\r\ntype photosType = {\r\n\tsmall: string | null\r\n\tlarge: string | null\r\n}\r\nexport type InitialStateType = {\r\n\tusers: Array<usersType>\r\n\tpageSize: number\r\n\ttotalUsersCount: number\r\n\tcurrentPage: number\r\n\tportionSize: number\r\n\tisFetching: boolean\r\n\tfollowingInProgress: Array<number>\r\n}\r\nlet initialState: InitialStateType = {\r\n\tusers: [],\r\n\tpageSize: 20,\r\n\ttotalUsersCount: 20,\r\n\tcurrentPage: 1,\r\n\tportionSize: 10,\r\n\tisFetching: false,\r\n\tfollowingInProgress: []\r\n}\r\nconst usersReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase FOLLOW:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers: updateObjInArray(state.users, action.userID, 'id', {followed: true})\r\n\r\n\t\t\t}\r\n\t\tcase UNFOLLOW:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers: state.users.map(u => {\r\n\t\t\t\t\tif (u.id === action.userID) {\r\n\t\t\t\t\t\treturn {...u, followed: false}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn u\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\tcase SET_USERS:\r\n\t\t\treturn {\r\n\t\t\t\t...state, users: action.users\r\n\t\t\t}\r\n\t\tcase SET_CURRENT_PAGE:\r\n\t\t\treturn {\r\n\t\t\t\t...state, currentPage: action.currentPageNumber\r\n\t\t\t}\r\n\t\tcase SET_TOTAL_COUNT:\r\n\t\t\treturn {\r\n\t\t\t\t...state, totalUsersCount: action.totalCount\r\n\t\t\t}\r\n\t\tcase TOGGELE_IS_FETCHING:\r\n\t\t\treturn {\r\n\t\t\t\t...state, isFetching: action.isFetching\r\n\t\t\t}\r\n\t\tcase TOGGELE_IS_FOLLOWING_PROGRESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfollowingInProgress: action.isFetching\r\n\t\t\t\t\t? [...state.followingInProgress, action.userID]\r\n\t\t\t\t\t: state.followingInProgress.filter(id => id !== action.userID)\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\nexport default usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperProfile\":\"Profile_wrapperProfile__1cLOe\"};","import React from \"react\";\r\nimport style from \"./FormsControls.module.css\"\r\nimport {required} from \"../../utils/validators/vaidators\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl: React.FC<any> = ({ meta: {touched, error},children, }) => {\r\n\tconst hasError = touched && error\r\n\treturn (\r\n\t\t<div className={style.formControl + \" \" + (hasError ? style.error : \"\")}>\r\n\t\t\t<div>\r\n\t\t\t\t{children}\r\n\t\t\t</div>\r\n\t\t\t{hasError && <span>{error}</span>}\r\n\t\t</div>\r\n\t)\r\n}\r\nexport const Textarea: React.FC<any> = (props) => {\r\n\tconst {input, meta, child, ...restProps} = props\r\n\treturn <FormControl {...props} ><textarea {...input} {...restProps} /></FormControl>\r\n}\r\nexport const Input: React.FC<any> = (props) => {\r\n\tconst {input, meta, child, ...restProps} = props\r\n\treturn <FormControl {...props} ><input {...input} {...restProps} /></FormControl>\r\n}\r\nexport const createField = (type: string,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder: string | null,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname: string,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent: any,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidate?: any,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tprops?: any,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext?: string  ) => {\r\n\treturn <div><Field type={type}\r\n\t\t\t\t\t\t\t\t\t\t placeholder={placeholder}\r\n\t\t\t\t\t\t\t\t\t\t name={name}\r\n\t\t\t\t\t\t\t\t\t\t component={component}\r\n\t\t\t\t\t\t\t\t\t\t validate={validate}\r\n\t\t\t\t\t\t\t\t\t\t {...props}\r\n\t/>{text}</div>\r\n}\r\n\r\n","import axios from \"axios\";\r\nimport {formDataType} from \"../Components/Login/Login\";\r\n\r\nconst instance = axios.create({\r\n\twithCredentials: true,\r\n\tbaseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n\theaders: {\r\n\t\t\"API-KEY\": \"1eda0634-107a-4512-9684-9a0c57ff42df\"\r\n\t},\r\n})\r\nexport const usersAPI = {\r\n\tgetUsers(currentPage: number = 1, pageSize: number = 10) {\r\n\t\treturn instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n\t\t\t.then(response => response.data) //promises\r\n\t},\r\n\tunFollowedUser(id: number) {\r\n\t\treturn instance.delete(`follow/${id}`)\r\n\t\t\t.then(response => response.data);\r\n\t},\r\n\tfollowedUser(id: number) {\r\n\t\treturn instance.post(`follow/${id}`)\r\n\t\t\t.then(response => response.data);\r\n\t},\r\n\tgetProfile(userId: string) {\r\n\t\treturn profileAPI.getProfile(userId)\r\n\t}\r\n}\r\n\r\ntype authAPIType<T> = {\r\n\tresultCode: number\r\n\tmessages: string[]\r\n\tdata: T\r\n}\r\nexport const authAPI = {\r\n\tme() {\r\n\t\treturn instance.get<authAPIType<{ id: number, email: string, login: string }>>(\"auth/me\")\r\n\t},\r\n\tlogin(formData: formDataType) {\r\n\t\treturn instance.post<authAPIType< { userId: number } >>(\"/auth/login\", formData)\r\n\t},\r\n\tlogOut() {\r\n\t\treturn instance.delete(\"/auth/login\")\r\n\t}\r\n}\r\nexport const profileAPI = {\r\n\tgetProfile(userId: string) {\r\n\t\treturn instance.get(`profile/` + userId)\r\n\t\t\t.then(response => response.data);\r\n\t},\r\n\tgetStatus(userId: string) {\r\n\t\treturn instance.get(`profile/status/` + userId)\r\n\t},\r\n\tupdateStatus(status: string) {\r\n\t\treturn instance.put(`profile/status/`, {status})\r\n\t},\r\n\tsavePhoto(file: any) {\r\n\t\tdebugger\r\n\t\tconst formData = new FormData()\r\n\t\tformData.append('image', file)\r\n\t\treturn instance.put(`profile/photo`, formData, {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'multipart/form-data'\r\n\t\t\t}\r\n\t\t})\r\n\t},\r\n}\r\n/*export const getProfile = (userId: number) => {\r\n\treturn instance.get(`https://social-network.samuraijs.com/api/1.0/profile/`+ userId )\r\n\t\t.then(response => response.data);\r\n}*/\r\n/*\r\nexport const getUsers = (currentPage: number = 1, pageSize: number = 10) => {\r\n\t return  instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n\t\t .then(response => response.data) //promises\r\n}\r\nexport const unFollowedUser = (id: number) => {\r\n\treturn instance.delete(`follow/${id}`).then(response => response.data);\r\n}\r\nexport const followedUser = (id: number) => {\r\n\treturn instance.post(`follow/${id}`).then(response => response.data);\r\n}\r\n*/\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__1hAbX\",\"item\":\"NavBar_item__2UvI-\",\"activeLink\":\"NavBar_activeLink__19op3\"};","import React from 'react';\r\nimport style from \"./SideFriend.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype SideFriendPropsType = {\r\n    id: number\r\n    avatar: string\r\n    name: string\r\n}\r\nexport const SideFriend = (props: SideFriendPropsType) => {\r\n    return <aside className={style.side}>\r\n        <div className={style.figure}>\r\n\r\n            <img className={style.avatar} alt=\"ava\"\r\n                 src={props.avatar}/>\r\n\r\n            <div className={style.item}>\r\n                <NavLink to={\"/friend/\" + props.id} activeClassName={style.activeLink}>{props.name}</NavLink>\r\n            </div>\r\n        </div>\r\n    </aside>\r\n}\r\n\r\n","import React from 'react';\r\nimport style from './Sidebar.module.css';\r\nimport {SideFriend} from \"./SideFriend/SideFriend\";\r\nimport {RootStoreType} from \"../../../redux/redux_store\";\r\nimport {connect} from \"react-redux\";\r\nimport {InitialStateType} from \"../../../redux/SideBar_reducer\";\r\n\r\n// MSTPType\r\ntype SidebarPropsType = {\r\n    sideState: InitialStateType\r\n}\r\n\r\nexport const Sidebar = (props: SidebarPropsType) => {\r\n    let friendsAsideElement = props.sideState.asideState.asideFriends.map(\r\n      (friends, index) => <SideFriend key={index} id={friends.id}\r\n                             name={friends.name}\r\n                             avatar={friends.avatar}/>\r\n                             )\r\n\r\n    return <aside className={style.aside}>\r\n        <div className={style.asideH}>\r\n            <h3>Friends</h3>\r\n        </div>\r\n        <div className={style.wrapperAside}>\r\n            {friendsAsideElement}\r\n        </div>\r\n    </aside>\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: RootStoreType): { sideState: InitialStateType } => {\r\n    return {\r\n        sideState: state.sideBarReducer\r\n    }\r\n}\r\n\r\n// TStateProps = {}, TDispatchProps = {}, TOwnProps = {}, State = DefaultState\r\nexport const SidebarContainer = connect<SidebarPropsType, {}, {}, RootStoreType>(mapStateToProps, {})(Sidebar)\r\n// export default SidebarContainer;","import React from 'react';\r\nimport style from './NavBar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {SidebarContainer} from \"./Sidebar/Sidebar\";\r\n\r\nconst Navbar = () => {\r\n    return <nav className={style.nav}>\r\n        <div className={style.item}>\r\n            <NavLink to='/profile' activeClassName={style.activeLink}>Profile</NavLink>\r\n        </div>\r\n        <div className={style.item}>\r\n            <NavLink to='/dialogs' activeClassName={style.activeLink}>Messages</NavLink>\r\n        </div>\r\n        <div className={style.item}>\r\n            <NavLink to='/news'>News</NavLink>\r\n        </div>\r\n        <div className={style.item}>\r\n            <NavLink to='/music'>Music</NavLink>\r\n        </div>\r\n        <div className={style.item}>\r\n            <NavLink to='/users'>Users</NavLink>\r\n        </div>\r\n        <div className={style.item}>\r\n            <NavLink to='/settings'>Settings</NavLink>\r\n        </div>\r\n\r\n    <SidebarContainer />\r\n\r\n    </nav>\r\n}\r\nexport default Navbar","import React, {ChangeEvent, useEffect, useState} from 'react';\r\n\r\ntype ProfileStatusPropsType = {\r\n\tstatus: string\r\n\tupdateStatus: (status: string) => string\r\n}\r\nexport const ProfileStatusWithHooks:React.FC<ProfileStatusPropsType> =({ status, updateStatus})=>{\r\n\tconst [editMode, setEditMode] = useState<boolean>(false)\r\n\tconst [statusS, setStatusS] = useState<string>(status)\r\n\r\n\tuseEffect( () => {\r\n\t\tsetStatusS(status)\r\n\t}, [status] )\r\n\r\n\tconst activeModeHandler = () => {\r\n\t\tsetEditMode(!editMode)\r\n\t}\r\n\tconst deActiveModeHandler = () => {\r\n\t\tsetEditMode(!editMode)\r\n\t\tupdateStatus(statusS)\r\n\t}\r\n\tconst onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetStatusS(e.currentTarget.value)\r\n\t}\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{!editMode &&\r\n        <div>\r\n            <b>Status: </b><span onDoubleClick={activeModeHandler}>{status === '' ? 'укажите статус' : status }</span>\r\n        </div>\r\n\t\t\t\t}\r\n\t\t\t\t{editMode &&\r\n        <div>\r\n            <input\r\n                value={statusS}\r\n                autoFocus={true}\r\n                onChange={onStatusChange}\r\n                onBlur={deActiveModeHandler}/>\r\n        </div>\r\n\t\t\t\t}\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n\r\n\r\n","import {ProfilePageTypeAPI} from \"../../../../redux/profile_reducer\";\r\nimport React from \"react\";\r\nimport {createField, Input, Textarea} from \"../../../../common/FormsControls/FormsControls\";\r\nimport { Contacts } from \"../ProfileInfo\";\r\nimport {InjectedFormProps, reduxForm} from \"redux-form\";\r\n\r\ntype ProfileDataFormPropsType = {\r\n\tprofile: ProfilePageTypeAPI\r\n\tonSubmit: () => void\r\n}\r\nexport const ProfileDataForm: React.FC<InjectedFormProps<ProfileDataFormPropsType>> = ({ handleSubmit, }) => {\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<div>\r\n\t\t\t\t<button >Save</button>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<b>Full name</b>: {createField('text', \"FullName\", 'fullName', Input, )}\r\n\t\t\t</div>\r\n\t\t\t<div><b>Looking for a job</b>: {createField('checkbox', \"lookingForAJob\", 'lookingForAJob', Input )}</div>\r\n      <div>\r\n          <b>My professional skills</b>: {createField('textarea', \"lookingForAJobDescription\", 'lookingForAJobDescription', Textarea )}\r\n      </div>\r\n\t\t\t<div>\r\n\t\t\t\t<b>About me</b>:\r\n\t\t\t\t{createField('text', \"aboutMe\", 'aboutMe', Input, )}\r\n\t\t\t</div>\r\n\t\t\t{/*<div>\r\n\t\t\t\t<b>Contacts</b>:{Object.keys(profile.contacts).map((key) => {\r\n\t\t\t\treturn <Contacts key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n\t\t\t})}\r\n\t\t\t</div>*/}\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\n\r\nexport const ProfileDataFormReduxForm = reduxForm<ProfileDataFormPropsType >({form: 'edit-profile'})(ProfileDataForm)","import React, {ChangeEvent, useState} from 'react';\r\nimport style from './DescriptionBlock.module.css';\r\nimport {ProfilePageTypeAPI} from \"../../../redux/profile_reducer\";\r\nimport userPhoto from \"../../../assect/user_Photo.jpg\";\r\nimport {ProfileStatusWithHooks} from \"./ProfileStatusWithHooks\";\r\nimport {MainProfile} from \"./MainProfile/MainProfile\";\r\nimport {PreLoader} from \"../../../common/PreLoader/PreLoader\";\r\nimport {ProfileDataForm, ProfileDataFormReduxForm} from \"./ProfileDataForm/ProfileDataForm\";\r\n\r\ntype PropsType = {\r\n\tprofile: ProfilePageTypeAPI\r\n\tstatus: string\r\n\tisOwner: boolean\r\n\tupdateStatus: (status: string) => string\r\n\tsavePhoto: (e: File) => void\r\n}\r\nexport const ProfileInfo: React.FC<PropsType> = ({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t profile,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t status,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t updateStatus,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t isOwner,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t savePhoto\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t }) => {\r\n\tconst [editMode, setEditMode] = useState(false)\r\n\r\n\tconst toEditMode = () => {\r\n\t\tsetEditMode(true)\r\n\t}\r\n\t//test commit\r\n\tconst onPhotoSelected = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tif (e.target.files!.length) {\r\n\t\t\tsavePhoto(e.target.files![0])\r\n\t\t}\r\n\t}\r\n\tif (!Object.keys(profile).length) {\r\n\t\treturn <PreLoader/>\r\n\t}\r\n\r\n\tconst onSubmit = () => {\r\n\r\n\t}\r\n\treturn <div className={style.wrapperDescription}>\r\n\t\t<h1 className={style.styleH1}>----Profile----</h1>\r\n\t\t<div>\r\n\r\n\t\t\t<img className={style.avatar} src={profile.photos.small !== null ? profile.photos.small : userPhoto} alt=\"#\"/>\r\n\t\t\t{isOwner && <input type=\"file\" onChange={onPhotoSelected}/>}\r\n\t\t\t{editMode ? <ProfileDataFormReduxForm onSubmit={onSubmit}/> : <ProfileData profile={profile} isOwner={isOwner} toEditMode={toEditMode}/>}\r\n\r\n\t\t</div>\r\n\t\t<div className={style.description}>\r\n\t\t\t<ProfileStatusWithHooks\r\n\t\t\t\tstatus={status}\r\n\t\t\t\tupdateStatus={updateStatus}\r\n\t\t\t/>\r\n\t\t\tDescription\r\n\t\t</div>\r\n\t</div>\r\n}\r\ntype contactsType = {\r\n\tcontactTitle: string\r\n\tcontactValue: string | null\r\n}\r\nexport const Contacts: React.FC<contactsType> = ({contactTitle, contactValue}) => {\r\n\treturn <div>\r\n\t\t<b>{contactTitle}</b>: {contactValue}\r\n\t</div>\r\n}\r\ntype ProfileDataPropsType = {\r\n\tprofile: ProfilePageTypeAPI\r\n\tisOwner: boolean\r\n\ttoEditMode: () => void\r\n}\r\nconst ProfileData: React.FC<ProfileDataPropsType> = ({profile, isOwner, toEditMode}) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{isOwner && <div>\r\n          <button onClick={toEditMode}>edit</button>\r\n      </div>}\r\n\t\t\t<div>{profile.fullName}</div>\r\n\t\t\t<div>Looking for a job: {profile.lookingForAJob ? 'yes' : 'no'}</div>\r\n\t\t\t{profile.lookingForAJob &&\r\n      <div>\r\n          <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n      </div>}\r\n\t\t\t<div>\r\n\t\t\t\t<b>About me</b>:{profile.aboutMe}\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<b>Contacts</b>:{Object.keys(profile.contacts).map((key) => {\r\n\t\t\t\treturn <Contacts key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = \"/redux/profile-reducer/ADD_POST\";\r\nconst DELETE_POST = \"/redux/profile-reducer/DELETE_POST\";\r\nconst CHANGE_POST_TEXT = \"/redux/profile-reducer/CHANGE_POST_TEXT\";\r\nconst SET_USER_PROFILE = \"/redux/profile-reducer/SET_USER_PROFILE\";\r\nconst SET_STATUS = \"/redux/profile-reducer/SET_STATUS\";\r\nconst UPDATE_STATUS = \"/redux/profile-reducer/UPDATE_STATUS\";\r\nconst SAVE_PHOTO_SUCCESS = \"/redux/profile-reducer/SAVE_PHOTO_SUCCESS\";\r\nexport const addPost = (formData: string) => {\r\n\treturn {type: ADD_POST, formData} as const\r\n}\r\nexport const deletePost = (postId: number) => {\r\n\treturn {type: DELETE_POST, postId} as const\r\n}\r\nexport const savePhotoSuccess = (photos: any) => {\r\n\treturn {type: SAVE_PHOTO_SUCCESS, photos} as const\r\n}\r\nexport const changePostText = (valueTextarea: string) => {\r\n\treturn {type: CHANGE_POST_TEXT, newPostText: valueTextarea} as const\r\n}\r\n\r\nexport const setUserProfile = (profile: ProfilePageTypeAPI) => {\r\n\treturn {type: SET_USER_PROFILE, profile} as const\r\n}\r\n\r\nexport const setUserStatus = (status: string) => {\r\n\treturn {type: SET_STATUS, status} as const\r\n}\r\nexport const updateUserStatus = (status: string) => {\r\n\treturn {type: UPDATE_STATUS, status} as const\r\n}\r\nexport const getProfile = (userId: string) => async (dispatch: Dispatch) => {\r\n\tlet response = await usersAPI.getProfile(userId);\r\n\tdispatch(setUserProfile(response))\r\n}\r\nexport const getStatus = (userId: string) => async (dispatch: Dispatch) => {\r\n\tlet res = await profileAPI.getStatus(userId)\r\n\tdispatch(setUserStatus(res.data))\r\n}\r\n\r\n\r\nexport const updateStatus = (status: string) => async (dispatch: Dispatch) => {\r\n\tlet res = await profileAPI.updateStatus(status)\r\n\tif (res.data.resultCode === 0) {\r\n\t\tdebugger\r\n\t\tdispatch(setUserStatus(status))\r\n\t}\r\n}\r\nexport const savePhoto = (file: File) => async (dispatch: Dispatch) => {\r\n\tlet res = await profileAPI.savePhoto(file)\r\n\tif (res.data.resultCode === 0) {\r\n\t\tdispatch(savePhotoSuccess(res.data.data.photos))\r\n\t}\r\n}\r\n\r\n\r\n\r\nexport type ActionType =\r\n\tReturnType<typeof addPost> |\r\n\tReturnType<typeof deletePost> |\r\n\tReturnType<typeof changePostText> |\r\n\tReturnType<typeof setUserProfile> |\r\n\tReturnType<typeof updateUserStatus> |\r\n\tReturnType<typeof savePhotoSuccess> |\r\n\tReturnType<typeof setUserStatus>\r\ntype PostType = {\r\n\tid: number\r\n\tmessage: string\r\n\tlikesCount: number\r\n}\r\nexport type ProfilePageTypeAPI = {\r\n\taboutMe: string\r\n\tcontacts: ContactsType\r\n\tlookingForAJob: boolean\r\n\tlookingForAJobDescription: string\r\n\tfullName: string\r\n\tuserId: number\r\n\tphotos: PhotosType\r\n}\r\ntype ContactsType = {\r\n\t[key: string]: null |string\r\n\tfacebook: string | null\r\n\twebsite: string | null\r\n\tvk: string | null\r\n\ttwitter: string | null\r\n\tinstagram: string | null\r\n\tyoutube: string | null\r\n\tgithub: string | null\r\n\tmainLink: string | null\r\n}\r\ntype PhotosType = {\r\n\tsmall: string | null\r\n\tlarge: string | null\r\n}\r\nexport type InitialStateType = {\r\n\tposts: Array<PostType>\r\n\tnewPostText: string\r\n\tprofile: ProfilePageTypeAPI\r\n\tstatus: string\r\n}\r\nlet initialState: InitialStateType = {\r\n\tposts: [\r\n\t\t{id: 1, message: \"My first post!\", likesCount: 41},\r\n\t\t{id: 2, message: \"Second post\", likesCount: 22},\r\n\t\t{id: 3, message: 'I live React', likesCount: 31},\r\n\t\t{id: 4, message: \"Awesome!!!\", likesCount: 421}\r\n\t],\r\n\tnewPostText: \"\",\r\n\tprofile: {} as ProfilePageTypeAPI,\r\n\tstatus: \"\"\r\n}\r\nconst profileReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase ADD_POST: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tposts: [...state.posts, {id: 5, message: action.formData, likesCount: 0}]\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase DELETE_POST: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tposts: state.posts.filter(p => p.id !== action.postId)\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase CHANGE_POST_TEXT: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tnewPostText: action.newPostText\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SET_USER_PROFILE: {\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state, profile: action.profile\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SET_STATUS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: action.status\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase UPDATE_STATUS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: action.status\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SAVE_PHOTO_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state, profile: {...state.profile, photos: action.photos}\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\nexport default profileReducer;","import React from 'react';\r\nimport style from './Post.module.css';\r\n\r\ntype PostPropsType={\r\n    message:string\r\n    likesCount:number\r\n}\r\nconst Post = (props: PostPropsType) => {\r\n    return (\r\n      <div className={style.wrapperItemCard}>\r\n        <img className={style.avatar} alt=\"ava\"\r\n             src='https://pm1.narvii.com/7171/f6f1c4463bbd9959052b699672858647f17660d3r1-264-250v2_00.jpg'/>\r\n        <span className={style.message} >{props.message}</span>\r\n        <div className={style.wrapperLike} >\r\n            <span>{props.likesCount} Like</span>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\nexport default Post","import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport { Textarea } from \"../../../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../../utils/validators/vaidators\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\ntype formDataType = {\r\n\tpostMessage: string\r\n}\r\n\r\ntype IPropsType = {\r\n\tnewPostText: string\r\n\taddPost: (formData: string) => void\r\n}\r\nexport const MyPostsMessageTextarea: React.FC<IPropsType> = (\r\n\t{ addPost,  ...props}\r\n) => {\r\n\tconst onSubmit = (formData: formDataType) => {\r\n\r\n\t\taddPost(formData.postMessage)\r\n\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<MyPostMessageReduxForm onSubmit={onSubmit} {...props}  />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst MyPostMessageForm: React.FC<InjectedFormProps<formDataType>> = (\r\n\t{\r\n\t\thandleSubmit\r\n\t}\r\n) => {\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<Field\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tname={'postMessage'}\r\n\t\t\t\tcomponent={Textarea}\r\n\t\t\t\tplaceholder={\"Post message\"}\r\n\t\t\t\tvalidate={[required, maxLength10]}\r\n\t\t\t/>\r\n\t\t\t<button>Add post</button>\r\n\t\t</form>\r\n\t)\r\n}\r\nconst MyPostMessageReduxForm = reduxForm<formDataType>({form: \"message\"})(MyPostMessageForm)","import React from \"react\";\r\nimport {RootStoreType} from \"../../../../redux/redux_store\";\r\nimport {connect} from \"react-redux\";\r\nimport {MyPostsMessageTextarea} from \"./MyPostsMessageTextarea\";\r\nimport {addPost} from \"../../../../redux/profile_reducer\";\r\n\r\nconst mapStateToProps = (state: RootStoreType) => ({\r\n\tposts: state.profileReducer.posts,\r\n\tnewPostText: state.profileReducer.newPostText\r\n})\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {addPost})(MyPostsMessageTextarea)","import React from 'react';\r\nimport style from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {PostType} from '../../../redux/store';\r\nimport MyPostsMessageContainer from \"./MyPostMessage/MyPostsMessageContainer\";\r\n\r\n\r\ntype MyPostsPropsType={\r\n  newPostText: string\r\n  posts:PostType[]\r\n  changePostText: (text: string) => void\r\n  addPost: (formData: string) => void\r\n}\r\n\r\nexport const MyPosts = React.memo((props:MyPostsPropsType) => {\r\n  console.log(\"MyPosts\")\r\n  let postsElement = props.posts.map(post => <Post key={post.id} message={post.message} likesCount={post.likesCount}/>)\r\n\r\n  return <div className={style.wrapperItem}>\r\n    <h3 className={style.styleH3}>----My posts----</h3>\r\n    <div className={style.postAdding}>\r\n    <MyPostsMessageContainer/>\r\n    </div>\r\n    {postsElement}\r\n  </div>\r\n})\r\n\r\n","import React from 'react';\r\nimport {PostType} from '../../../redux/store';\r\nimport {addPost, changePostText} from \"../../../redux/profile_reducer\";\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootStoreType} from \"../../../redux/redux_store\";\r\n\r\ntype MSTPType = {\r\n  posts: Array<PostType>\r\n  newPostText: string\r\n}\r\n\r\nconst mapStateToProps = (state: RootStoreType): MSTPType => {\r\n  return {\r\n    posts: state.profileReducer.posts,\r\n    newPostText: state.profileReducer.newPostText\r\n  }\r\n}\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, {changePostText, addPost})(MyPosts)\r\n\r\n","import React from 'react';\r\nimport style from './Profile.module.css';\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfilePropsType} from \"./ProfileContainer\";\r\n\r\nconst Profile: React.FC<ProfilePropsType> = ({profile, status, updateStatus, isOwner,savePhoto,}) => {\r\n\treturn <div className={style.wrapperProfile}>\r\n\t\t<ProfileInfo profile={profile}\r\n\t\t\t\t\t\t\t\t status={status}\r\n\t\t\t\t\t\t\t\t updateStatus={updateStatus}\r\n\t\t\t\t\t\t\t\t isOwner={isOwner}\r\n\t\t\t\t\t\t\t\t savePhoto={savePhoto}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t<MyPostsContainer />\r\n\t</div>\r\n}\r\nexport default Profile","import React, {ReactNode} from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootStoreType} from \"../../redux/redux_store\";\r\nimport {getProfile, ProfilePageTypeAPI, getStatus, updateStatus, savePhoto} from \"../../redux/profile_reducer\";\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\r\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\nimport {compose} from 'redux';\r\n\r\nexport interface ProfilePropsType extends RouteComponentProps<{ userId: string }> {\r\n\tchildren?: ReactNode\r\n\tprofile: ProfilePageTypeAPI\r\n\tauth: boolean\r\n\tstatus: string\r\n\tisOwner: boolean\r\n\tauthorizedUserId: string\r\n\tgetProfile: (userId: string) => void\r\n\tgetStatus: (userId: string) => string\r\n\tupdateStatus: (status: string) => string\r\n\tsavePhoto: (e: File) => void\r\n}\r\nclass ProfileContainer extends React.Component<ProfilePropsType> {\r\n\trefreshProfile() {\r\n\t\tlet userId = this.props.match.params.userId\r\n\t\tif (!userId) {\r\n\t\t\tuserId = this.props.authorizedUserId\r\n\t\t\tif (!userId) {\r\n\t\t\t\tthis.props.history.push('/login')\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.props.getProfile(userId)\r\n\t\tthis.props.getStatus(userId)\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.refreshProfile()\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps: Readonly<ProfilePropsType>, prevState: Readonly<{}>) {\r\n\t\tif (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n\t\t\tthis.refreshProfile()\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Profile {...this.props}\r\n\t\t\t\t\t\t\t isOwner={!this.props.match.params.userId}\r\n\t\t\t\t\t\t\t profile={this.props.profile}\r\n\t\t\t\t\t\t\t status={this.props.status}\r\n\t\t\t\t\t\t\t updateStatus={this.props.updateStatus}\r\n\t\t\t\t\t\t\t savePhoto={this.props.savePhoto}\r\n\t\t\t/>\r\n\t\t)\r\n\t}\r\n}\r\nconst mapStateToProps = (state: RootStoreType) => ({\r\n\tprofile: state.profileReducer.profile,\r\n\tauth: state.auth.isAuth,\r\n\tstatus: state.profileReducer.status,\r\n\tauthorizedUserId: state.auth.userId\r\n})\r\nexport default compose<React.ComponentType>(\r\n\tconnect(mapStateToProps, {getProfile, getStatus, updateStatus, savePhoto}),\r\n\twithRouter,\r\n\twithAuthRedirect\r\n)(ProfileContainer)\r\n\r\n\r\n","import React from 'react';\r\nimport style from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {HeaderPropsType} from \"./HeaderContainer\";\r\n\r\n\r\nexport const Header: React.FunctionComponent<HeaderPropsType> = ({login, isAuth, logOutMe}) => {\r\n\r\n\r\n\r\n\treturn <header className={style.wrapperHeader}>\r\n\t\t<img className={style.img} alt='logo'\r\n\t\t\t\t src={\"https://i.pinimg.com/564x/81/cb/9c/81cb9cf335d5cbcf74d093ff869fe92e.jpg\"}/>\r\n\t\t<div className={style.loginBlock}>\r\n\t\t\t{ isAuth ?  <span className={style.info} >{login}</span> : <NavLink to={\"/login\"}>Login</NavLink> }\r\n\t\t\t<button onClick={logOutMe} >Log out</button>\r\n\t\t</div>\r\n\t</header>;\r\n}\r\nexport default Header","import {Dispatch} from \"redux\";\r\nimport {FormAction, stopSubmit} from \"redux-form\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {authAPI} from \"../api/api\";\r\nimport {formDataType} from \"../Components/Login/Login\";\r\nimport {RootStoreType} from \"./redux_store\";\r\n\r\nconst SET_USER_DATA = \"/redux/auth_reducer/SET_USER_DATA\"\r\nconst LOGIN_ME = \"/redux/auth_reducer/LOGIN_ME\"\r\nconst LOG_OUT = \"/redux/auth_reducer/LOG_OUT\"\r\nconst ERROR_MESSAGE_REDUCER = \"/redux/auth_reducer/ERROR_MESSAGE_REDUCER\"\r\nexport const setUserData = (userId: number | null, email: string | null, login: string | null) => {\r\n\treturn {type: SET_USER_DATA, data: {userId, email, login}} as const\r\n}\r\nexport const loginMe = () => ({type: LOGIN_ME} as const)\r\nexport const logOut = () => ({type: LOG_OUT} as const)\r\nexport const setError = (messError: string) => ({type: ERROR_MESSAGE_REDUCER, messError} as const)\r\nexport const getAuthUserData = () => async (dispatch: Dispatch) => {\r\n\tlet response = await authAPI.me()\r\n\tif (response.data.resultCode === 0) {\r\n\t\tlet {id, email, login} = response.data.data\r\n\t\tdispatch(setUserData(id, email, login))\r\n\t}\r\n}\r\nexport const getLoginMe = (formData: formDataType) => async (dispatch: ThunkDispatch<RootStoreType, unknown, ActionType | FormAction>) => {\r\n\tlet res = await authAPI.login(formData)\r\n\tif (res.data.resultCode === 1) {\r\n\t\tlet messError = res.data.messages[0]\r\n\t\tdispatch(setError(messError))\r\n\t\tdispatch(stopSubmit(\"login\", {_error: 'Common error'}))\r\n\t}\r\n\tif (res.data.resultCode === 0) {\r\n\t\tdispatch(getAuthUserData())\r\n\t}\r\n}\r\nexport const logOutMe = () => async (dispatch: Dispatch) => {\r\n\t\tlet response = await authAPI.logOut()\r\n\tif(response.data.resultCode === 0) {\r\n\t\tdispatch(logOut())\r\n\t}\r\n}\r\nexport type ActionType =\r\n\tReturnType<typeof setUserData> |\r\n\tReturnType<typeof setError> |\r\n\tReturnType<typeof logOut> |\r\n\tReturnType<typeof loginMe>\r\nexport type InitialStateType = {\r\n\tuserId: number | null\r\n\temail: string | null\r\n\tlogin: string | null\r\n\tisAuth: boolean\r\n\terrorMessages: string\r\n\tisError: boolean\r\n}\r\nlet initialState: InitialStateType = {\r\n\tuserId: null,\r\n\temail: null,\r\n\tlogin: null,\r\n\tisAuth: false,\r\n\terrorMessages: '',\r\n\tisError: false\r\n}\r\nconst authReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_USER_DATA: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action.data,\r\n\t\t\t\tisAuth: true\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase LOG_OUT: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisAuth: false\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase LOGIN_ME: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisAuth: true\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase ERROR_MESSAGE_REDUCER : {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisError: true,\r\n\t\t\t\terrorMessages: action.messError\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\nexport default authReducer;","import React, {ReactNode} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Header from './Header';\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {logOutMe, setUserData} from \"../../redux/auth_reducer\";\r\nimport {RootStoreType} from \"../../redux/redux_store\";\r\n\r\nexport interface HeaderPropsType extends RouteComponentProps<any> {\r\n\tsetUserData: (userId: number | null, email: string | null, login: string | null) => void\r\n\tchildren?: ReactNode\r\n\tlogin: string | null\r\n\tuserId: number | null\r\n\temail: string | null\r\n\tisAuth: boolean\r\n\tlogOutMe: () => void\r\n}\r\nexport class HeaderContainer extends React.Component<HeaderPropsType, {}> {\r\n\trender() {\r\n\t\treturn <>\r\n\t\t\t<Header {...this.props} />\r\n\t\t</>\r\n\t}\r\n}\r\nconst mapStateToProps = (state: RootStoreType) => ({\r\n\tlogin: state.auth.login,\r\n\temail: state.auth.email,\r\n\tuserId: state.auth.userId,\r\n\tisAuth: state.auth.isAuth\r\n})\r\nconst WithUrlDataContainerComponent = withRouter<HeaderPropsType & RouteComponentProps, any>(HeaderContainer)\r\nexport default connect(mapStateToProps, {setUserData, logOutMe})(WithUrlDataContainerComponent)\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n// import reduxForm not default\r\n// reduxForm from \"redux-form\"; => not work\r\n// {reduxForm} from \"redux-form\"; => work\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {createField, Input } from \"../../common/FormsControls/FormsControls\";\r\nimport { required } from \"../../utils/validators/vaidators\";\r\n\r\nexport type formDataType = {\r\n\temail: string\r\n\tpassword: string\r\n\trememberMe: boolean\r\n}\r\nexport type IPropsType = {\r\n\tauth: boolean\r\n\tgetLoginMe: (formData: formDataType) => void\r\n\terrorMessages: string\r\n\terrorBool: boolean\r\n}\r\n\r\nexport const Login: React.FC< IPropsType> = (\r\n\t{\r\n\t\tgetLoginMe, ...props\r\n\t}\r\n) => {\r\n\tconst onSubmit = (formData: formDataType) => {\r\n\t\tgetLoginMe(formData)\r\n\t}\r\n\tif( props.auth ) return <Redirect to={'/profile'} />\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Login</h1>\r\n\t\t\t<LoginReduxForm onSubmit={onSubmit} {...props} />\r\n\t\t\t{props.errorBool ? <div>{props.errorMessages}123</div> : \" \" }\r\n\t\t</div>\r\n\t)\r\n}\r\nexport const LoginForm: React.FC<InjectedFormProps<formDataType> > = (\r\n\t{\r\n\t handleSubmit\r\n\t}\r\n) => {\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\r\n\t\t\t\t{createField('text', 'email', 'email', Input, [required])}\r\n\t\t\t\t{createField('text', 'Password', 'password', Input, [required])}\r\n\t\t\t\t{createField('checkbox', null, 'rememberMe', Input, null,{},  \"remember me\")}\r\n\r\n\t\t\t<div>\r\n\t\t\t\t<button>Login</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<formDataType>({form: \"login\"})(LoginForm)\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {RootStoreType} from \"../../redux/redux_store\";\r\nimport {Login} from \"./Login\";\r\nimport {getLoginMe} from \"../../redux/auth_reducer\";\r\n\r\nconst mapStateToProps = (state: RootStoreType) => ({\r\n\tauth: state.auth.isAuth,\r\n\terrorBool: state.auth.isError,\r\n\terrorMessages: state.auth.errorMessages\r\n})\r\n\r\nexport default connect(mapStateToProps, {getLoginMe})(Login)","import {getAuthUserData} from \"./auth_reducer\";\r\nimport {RootStoreType} from \"./redux_store\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\n\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\"\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS} as const)\r\n\r\n\r\nexport const initializeApp = () => (dispatch: ThunkDispatch<RootStoreType, unknown, ActionType>) => {\r\n\tconst promise = dispatch(getAuthUserData());\r\n\t//res all promise => example [pr,pr1,pr2,pr3]\r\n\tPromise.all([promise])\r\n\t\t\t\t.then( () => {\r\n\t\t\t\tdispatch(initializedSuccess())\r\n\t\t\t} )\r\n\r\n\t}\r\n\r\n\r\nexport type ActionType =\r\n\tReturnType<typeof initializedSuccess>\r\n\r\n\r\nexport type InitialStateType = {\r\n\tintialized: boolean\r\n}\r\nlet initialState: InitialStateType = {\r\n\tintialized: false,\r\n\r\n}\r\nconst appReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase INITIALIZED_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tintialized: true\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\nexport default appReducer;","import React, { Suspense } from 'react';\r\nimport './App.css';\r\nimport Navbar from \"./Components/NavBar/NavBar\";\r\nimport {Route, withRouter} from 'react-router-dom';\r\n//import DialogsContainer from './Components/Dialogs/DialogsContainer';\r\n//import UsersContainer from \"./Components/Users/UsersContainer\";\r\nimport ProfileContainer from \"./Components/Profile/ProfileContainer\";\r\nimport HeaderContainer from './Components/Header/HeaderContainer';\r\nimport LoginContainer from \"./Components/Login/LoginContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from 'redux';\r\nimport {initializeApp} from \"./redux/app_reducer\";\r\nimport {RootStoreType} from \"./redux/redux_store\";\r\nimport {PreLoader} from \"./common/PreLoader/PreLoader\";\r\n\r\nconst DialogsContainer = React.lazy(() => import('./Components/Dialogs/DialogsContainer'));\r\nconst UsersContainer = React.lazy(() => import('./Components/Users/UsersContainer'));\r\n\r\n\r\n\r\ninterface AppPropsType extends React.Component {\r\n\tinitializeApp: () => void\r\n\tintialized: boolean\r\n}\r\nexport class App extends React.Component<AppPropsType, {}> {\r\n\tcomponentDidMount() {\r\n\t\tthis.props.initializeApp()\r\n\t}\r\n\trender() {\r\n\t\tif (!this.props.intialized) {\r\n\t\t\treturn <PreLoader/>\r\n\t\t}\r\n\t\treturn (\r\n\r\n\t\t\t<div className='app_wrapper'>\r\n\t\t\t\t<HeaderContainer/>\r\n\t\t\t\t<Navbar/>\r\n\t\t\t\t<div className=\"app_wrapper_content\">\r\n\t\t\t\t\t<Route path='/login' render={() => <LoginContainer/>}/>\r\n\t\t\t\t\t<Route path='/dialogs' render={() => {\r\n\t\t\t\t\t\treturn <Suspense fallback={<div>Загрузка...</div>}>\r\n\t\t\t\t\t\t\t<DialogsContainer/>\r\n\t\t\t\t\t\t</Suspense>\r\n\t\t\t\t\t}}/>\r\n\t\t\t\t\t<Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\r\n\t\t\t\t\t<Route path='/users' render={() => {\r\n\t\t\t\t\t\treturn <Suspense fallback={<div>Загрузка...</div>}>\r\n\t\t\t\t\t\t\t<UsersContainer/>\r\n\t\t\t\t\t\t</Suspense>\r\n\t\t\t\t\t}}/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nconst mapStateToProps = (state: RootStoreType) => ({\r\n\tintialized: state.app.intialized\r\n})\r\nexport default compose<React.ComponentType>(\r\n\twithRouter,\r\n\tconnect(mapStateToProps, {initializeApp}))(App)\r\n","type AsideFriendsType = {\r\n  id: number\r\n  avatar: string\r\n  name: string\r\n}\r\n\r\ntype AsideStateType = {\r\n  asideFriends: Array<AsideFriendsType>\r\n}\r\n\r\nexport type InitialStateType = {\r\n  asideState: AsideStateType\r\n}\r\n\r\nlet initialState: InitialStateType = {\r\n  asideState: {\r\n    asideFriends: [\r\n      {id: 1,\r\n        avatar: 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcT6Ghz_3vVX362NspWGVByszfbkVlJ77tisTQ&usqp=CAU',\r\n        name: 'Pavel'}, {id: 2,\r\n        avatar: 'https://klike.net/uploads/posts/2019-03/1551511801_1.jpg',\r\n        name: 'Vika'}, {id: 3,\r\n        avatar: 'https://tiktok-wiki.ru/wp-content/uploads/2020/05/avatarki-dlya-tik-toka1.jpg',\r\n        name: 'Alex'}\r\n    ]\r\n  }\r\n}\r\n\r\nconst sideBarReducer = (state: InitialStateType = initialState): InitialStateType => {\r\n  return {\r\n    ...state\r\n  }\r\n}\r\n\r\nexport default sideBarReducer","import { createStore, combineReducers, applyMiddleware} from \"redux\";\r\nimport dialogsReducer from \"./dialogs_reducer\";\r\nimport profileReducer from \"./profile_reducer\";\r\nimport sideBarReducer from \"./SideBar_reducer\";\r\nimport usersReducer from \"./users_reducer\";\r\nimport  thunkMiddleware  from \"redux-thunk\"\r\nimport authReducer from \"./auth_reducer\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app_reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    dialogsReducer: dialogsReducer,\r\n    profileReducer: profileReducer,\r\n    sideBarReducer: sideBarReducer,\r\n    usersReducer: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\n\r\nexport type RootStoreType = ReturnType<typeof reducers>\r\n\r\n// // @ts-ignore\r\n// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n// const store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n\r\nexport let store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\n//@ts-ignore\r\nwindow.store = store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from './redux/redux_store';\r\n\r\nReactDOM.render(\r\n\t<BrowserRouter>\r\n\t\t<Provider store={store}>\r\n\t\t\t<App/>\r\n\t\t</Provider>\r\n\t</BrowserRouter>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n\r\n\r\n","export const required = (value: string) => {\r\n\tif (value) return undefined\r\n\treturn \"Field is required\"\r\n}\r\n\r\n// export const maxLength30 = (value: string) => {\r\n// \tif (value.length > 30) return \"Max value length is 30 symbols\"\r\n// \treturn undefined\r\n// }\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\r\n\tif (value.length > maxLength) return `Max value length is ${maxLength} symbols`\r\n\treturn undefined\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"SideFriend_avatar__2TA6Z\",\"item\":\"SideFriend_item__39SG_\",\"activeLink\":\"SideFriend_activeLink__1009I\",\"figure\":\"SideFriend_figure__1B_EM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"DescriptionBlock_avatar__1bqZU\",\"wrapperDescription\":\"DescriptionBlock_wrapperDescription__2Su7C\",\"description\":\"DescriptionBlock_description__T2DN7\",\"styleH1\":\"DescriptionBlock_styleH1__2vJmT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperItemCard\":\"Post_wrapperItemCard__3FLMh\",\"avatar\":\"Post_avatar__2Cp1Z\",\"wrapperLike\":\"Post_wrapperLike__1TjyE\",\"message\":\"Post_message__wUeLL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperHeader\":\"Header_wrapperHeader__tbckh\",\"img\":\"Header_img__3jhlz\",\"loginBlock\":\"Header_loginBlock__3zX9d\",\"info\":\"Header_info__1_kWO\"};","export default __webpack_public_path__ + \"static/media/preLoader.bb36d2ce.svg\";","import React from \"react\";\r\nimport preLoader from \"../../assect/preLoader.svg\";\r\n\r\nexport const PreLoader = () => {\r\n\treturn (<div>\r\n\t\t<img src={preLoader} alt=\"#\"/>\r\n\t</div>)\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Sidebar_nav__2gJWo\",\"aside\":\"Sidebar_aside__31rpq\",\"asideH\":\"Sidebar_asideH__2Tc_V\",\"wrapperAside\":\"Sidebar_wrapperAside__3EI74\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperItem\":\"MyPosts_wrapperItem__1Udun\",\"postAdding\":\"MyPosts_postAdding__243xH\",\"styleH3\":\"MyPosts_styleH3__38jLZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2z5Xp\",\"error\":\"FormsControls_error__Qu3vm\"};"],"sourceRoot":""}