{"version":3,"sources":["Components/NavBar/NavBar.module.css","Components/Dialogs/Dialogs.module.css","Components/NavBar/Sidebar/SideFriend/SideFriend.module.css","Components/Profile/ProfileInfo/DescriptionBlock.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/Header/Header.module.css","Components/NavBar/Sidebar/Sidebar.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Dialogs/DialogItem/DialogItem.module.css","Components/Users/Users.module.css","Components/Profile/Profile.module.css","Components/NavBar/Sidebar/SideFriend/SideFriend.tsx","Components/NavBar/Sidebar/Sidebar.tsx","Components/NavBar/NavBar.tsx","redux/dialogs_reducer.ts","Components/Dialogs/DialogItem/DialogItem.tsx","Components/Dialogs/Messages/Messages.tsx","Components/Dialogs/Dialogs.tsx","Components/Dialogs/DialogsContainer.tsx","api/api.ts","redux/users_reducer.ts","assect/user_Photo.jpg","Components/Users/Users.tsx","assect/preLoader.svg","common/PreLoader/PreLoader.tsx","Components/Users/UsersContainer.tsx","Components/Profile/ProfileInfo/ProfileInfo.tsx","redux/profile_reducer.ts","Components/Profile/MyPosts/Post/Post.tsx","Components/Profile/MyPosts/MyPostsContainer.tsx","Components/Profile/MyPosts/MyPosts.tsx","Components/Profile/Profile.tsx","Components/Profile/ProfileContainer.tsx","Components/Header/Header.tsx","redux/auth_reducer.ts","Components/Header/HeaderContainer.tsx","App.tsx","redux/SideBar_reducer.ts","redux/redux_store.ts","index.tsx"],"names":["module","exports","SideFriend","props","className","style","side","figure","avatar","alt","src","item","to","id","activeClassName","activeLink","name","SidebarContainer","connect","state","sideState","sideBarReducer","friendsAsideElement","asideState","asideFriends","map","friends","index","aside","asideH","wrapperAside","Navbar","nav","CHANGE_MESSAGE_TEXT","ADD_MESSAGE","initialState","messages","message","dialogs","newMessageText","dialogsReducer","action","type","DialogItem","wrapperName","Messages","Dialogs","dialogsElement","messagesPage","dialog","messagesElement","dialogItems","wrapperTextForm","value","onChange","e","body","currentTarget","changeMessageText","onClick","addMessage","DialogsContainer","dispatch","trimmedValue","instance","axios","create","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","then","response","data","userId","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_COUNT","TOGGELE_IS_FETCHING","TOGGELE_IS_FOLLOWING_PROGRESS","followSuccess","userID","unFollowSuccess","toggleIsFetching","isFetching","toggleFollowingProgress","users","totalUsersCount","followingInProgress","usersReducer","u","followed","currentPageNumber","totalCount","filter","Users","pagesCount","Math","ceil","pages","i","push","p","selectedPage","onPageChanged","stylePhoto","photos","small","userPhoto","disabled","some","status","PreLoader","preLoader","UsersContainer","getUsers","this","React","Component","setCurrentPage","items","ProfileInfo","wrapperDescription","styleH1","profile","prof","fullName","aboutMe","contacts","facebook","instagram","description","ADD_POST","CHANGE_POST_TEXT","SET_USER_PROFILE","setUserProfile","posts","likesCount","newPostText","profileReducer","Post","wrapperItemCard","wrapperLike","MyPostsContainer","addPostActionCreator","changePostText","text","postsElement","post","wrapperItem","styleH3","postAdding","placeholder","Profile","wrapperProfile","ProfileContainer","match","params","getProfile","WithUrlDataContainerComponent","withRouter","Header","login","isAuth","wrapperHeader","img","loginBlock","info","SET_USER_DATA","email","authReducer","HeaderContainer","resultCode","setUserData","auth","App","path","render","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.60301ef9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__1hAbX\",\"item\":\"NavBar_item__2UvI-\",\"activeLink\":\"NavBar_activeLink__19op3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__347uQ\",\"dialogItems\":\"Dialogs_dialogItems__1RDve\",\"active\":\"Dialogs_active__2z-Zc\",\"messages\":\"Dialogs_messages__35xug\",\"message\":\"Dialogs_message__fYzum\",\"wrapperTextForm\":\"Dialogs_wrapperTextForm__3dgjv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"SideFriend_avatar__2TA6Z\",\"item\":\"SideFriend_item__39SG_\",\"activeLink\":\"SideFriend_activeLink__1009I\",\"figure\":\"SideFriend_figure__1B_EM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"DescriptionBlock_avatar__1bqZU\",\"wrapperDescription\":\"DescriptionBlock_wrapperDescription__2Su7C\",\"description\":\"DescriptionBlock_description__T2DN7\",\"styleH1\":\"DescriptionBlock_styleH1__2vJmT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperItemCard\":\"Post_wrapperItemCard__3FLMh\",\"avatar\":\"Post_avatar__2Cp1Z\",\"wrapperLike\":\"Post_wrapperLike__1TjyE\",\"message\":\"Post_message__wUeLL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperHeader\":\"Header_wrapperHeader__tbckh\",\"img\":\"Header_img__3jhlz\",\"loginBlock\":\"Header_loginBlock__3zX9d\",\"info\":\"Header_info__1_kWO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Sidebar_nav__2gJWo\",\"aside\":\"Sidebar_aside__31rpq\",\"asideH\":\"Sidebar_asideH__2Tc_V\",\"wrapperAside\":\"Sidebar_wrapperAside__3EI74\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperItem\":\"MyPosts_wrapperItem__1Udun\",\"postAdding\":\"MyPosts_postAdding__243xH\",\"styleH3\":\"MyPosts_styleH3__38jLZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperName\":\"DialogItem_wrapperName__jGLlq\",\"activeLink\":\"DialogItem_activeLink__EE8_V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stylePhoto\":\"Users_stylePhoto__35VCk\",\"selectedPage\":\"Users_selectedPage__3kYFT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperProfile\":\"Profile_wrapperProfile__1cLOe\"};","import React from 'react';\r\nimport style from \"./SideFriend.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype SideFriendPropsType = {\r\n    id: number\r\n    avatar: string\r\n    name: string\r\n}\r\nexport const SideFriend = (props: SideFriendPropsType) => {\r\n    return <aside className={style.side}>\r\n        <div className={style.figure}>\r\n\r\n            <img className={style.avatar} alt=\"ava\"\r\n                 src={props.avatar}/>\r\n\r\n            <div className={style.item}>\r\n                <NavLink to={\"/friend/\" + props.id} activeClassName={style.activeLink}>{props.name}</NavLink>\r\n            </div>\r\n        </div>\r\n    </aside>\r\n}\r\n\r\n","import React from 'react';\r\nimport style from './Sidebar.module.css';\r\nimport {SideFriend} from \"./SideFriend/SideFriend\";\r\nimport {RootStoreType} from \"../../../redux/redux_store\";\r\nimport {connect} from \"react-redux\";\r\nimport {InitialStateType} from \"../../../redux/SideBar_reducer\";\r\n\r\n// MSTPType\r\ntype SidebarPropsType = {\r\n    sideState: InitialStateType\r\n}\r\n\r\nexport const Sidebar = (props: SidebarPropsType) => {\r\n    let friendsAsideElement = props.sideState.asideState.asideFriends.map(\r\n      (friends, index) => <SideFriend key={index} id={friends.id}\r\n                             name={friends.name}\r\n                             avatar={friends.avatar}/>\r\n                             )\r\n\r\n    return <aside className={style.aside}>\r\n        <div className={style.asideH}>\r\n            <h3>Friends</h3>\r\n        </div>\r\n        <div className={style.wrapperAside}>\r\n            {friendsAsideElement}\r\n        </div>\r\n    </aside>\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: RootStoreType): { sideState: InitialStateType } => {\r\n    return {\r\n        sideState: state.sideBarReducer\r\n    }\r\n}\r\n\r\n// TStateProps = {}, TDispatchProps = {}, TOwnProps = {}, State = DefaultState\r\nexport const SidebarContainer = connect<SidebarPropsType, {}, {}, RootStoreType>(mapStateToProps, {})(Sidebar)\r\n// export default SidebarContainer;","import React from 'react';\r\nimport style from './NavBar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {SidebarContainer} from \"./Sidebar/Sidebar\";\r\n\r\nconst Navbar = () => {\r\n    return <nav className={style.nav}>\r\n        <div className={style.item}>\r\n            <NavLink to='/profile' activeClassName={style.activeLink}>Profile</NavLink>\r\n        </div>\r\n        <div className={style.item}>\r\n            <NavLink to='/dialogs' activeClassName={style.activeLink}>Messages</NavLink>\r\n        </div>\r\n        <div className={style.item}>\r\n            <NavLink to='/news'>News</NavLink>\r\n        </div>\r\n        <div className={style.item}>\r\n            <NavLink to='/music'>Music</NavLink>\r\n        </div>\r\n        <div className={style.item}>\r\n            <NavLink to='/users'>Users</NavLink>\r\n        </div>\r\n        <div className={style.item}>\r\n            <NavLink to='/settings'>Settings</NavLink>\r\n        </div>\r\n\r\n    <SidebarContainer />\r\n\r\n    </nav>\r\n}\r\nexport default Navbar","export const addMessageActionCreator = () => {\r\n  return {type: ADD_MESSAGE} as const\r\n}\r\n\r\nexport const changeMessageTextActionCreator = (valueTextarea: string) => {\r\n  return {type: CHANGE_MESSAGE_TEXT, newMessageText: valueTextarea} as const\r\n}\r\n\r\nconst CHANGE_MESSAGE_TEXT = \"CHANGE_MESSAGE_TEXT\"\r\nconst ADD_MESSAGE = \"ADD_MESSAGE\";\r\n\r\nexport type ActionType =\r\n  ReturnType<typeof addMessageActionCreator> |\r\n  ReturnType<typeof changeMessageTextActionCreator>\r\n\r\ntype DialogType = {\r\n  id: number\r\n  name: string\r\n}\r\ntype MessageType = {\r\n  id: number\r\n  message: string\r\n}\r\n\r\ntype InitialStateType = {\r\n  messages: Array<MessageType>\r\n  dialogs: Array<DialogType>\r\n  newMessageText: string\r\n}\r\n\r\nlet initialState = {\r\n  messages: [\r\n    {id: 1, message: \"HI, brother!\"},\r\n    {id: 2, message: \"Wtf\"},\r\n    {id: 3, message: \"I love you\"},\r\n    {id: 4, message: \"Where is my money?\"},\r\n  ],\r\n  dialogs: [\r\n    {id: 1, name: \"Dzimych\"},\r\n    {id: 2, name: \"Sveta\"},\r\n    {id: 3, name: \"Pasha\"},\r\n    {id: 4, name: \"Gleb\"},\r\n    {id: 5, name: \"Vika\"}\r\n  ],\r\n  newMessageText: ''\r\n}\r\n\r\nconst dialogsReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n\r\n  switch (action.type) {\r\n    case ADD_MESSAGE:\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, {id: 5, message: state.newMessageText}],\r\n        newMessageText: ''\r\n      }\r\n    case CHANGE_MESSAGE_TEXT:\r\n      return {\r\n        ...state,\r\n        newMessageText: action.newMessageText\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport default dialogsReducer;","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport style from \"./DialogItem.module.css\"\r\n\r\ntype DialogItemPropsType = {\r\n  name: string\r\n  id: number\r\n}\r\n\r\n\r\nconst DialogItem = (props: DialogItemPropsType) => {\r\n  return (\r\n    <div className={style.wrapperName}>\r\n      <NavLink activeClassName={style.activeLink}  to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem","import React from \"react\";\r\nimport style from './../Dialogs.module.css';\r\n\r\n\r\ntype MessagesPropsType = {\r\n  message: string\r\n}\r\nconst Messages = (props: MessagesPropsType) => {\r\n  return (\r\n    <div>\r\n      <div className={style.message}>{props.message}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Messages","import React, {ChangeEvent} from \"react\"\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Messages from \"./Messages/Messages\";\r\nimport {MessagesPageType} from \"../../redux/store\";\r\nimport style from \"./Dialogs.module.css\"\r\n\r\n\r\ntype DialogsPropsType = {\r\n  messagesPage: MessagesPageType\r\n  newMessageText: string\r\n  addMessage: () => void\r\n  changeMessageText: (trimmedValue: string) => void\r\n}\r\n\r\n\r\nconst Dialogs = (props: DialogsPropsType) => {\r\n  let dialogsElement = props.messagesPage.dialogs.map(dialog => <DialogItem key={dialog.id} name={dialog.name} id={dialog.id}/>)\r\n\r\n  let messagesElement = props.messagesPage.messages.map(message => <Messages key={message.id} message={message.message}/>)\r\n\r\n  let onNewMessageChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n    let body = e.currentTarget.value\r\n    props.changeMessageText(body)\r\n  }\r\n  let addNewMessage = () => {\r\n    props.addMessage()\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={style.dialogs}>\r\n\r\n      <div className={style.dialogItems}>\r\n        {dialogsElement}\r\n      </div>\r\n\r\n      <div className={style.messages}>\r\n        {messagesElement}\r\n        <div>\r\n          <div className={style.wrapperTextForm}>\r\n            <textarea value={props.newMessageText}\r\n                      onChange={onNewMessageChange}\r\n            />\r\n            <button onClick={addNewMessage} >Add message</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Dialogs","import React, {Dispatch} from \"react\"\r\nimport {ActionType, addMessageActionCreator, changeMessageTextActionCreator} from \"../../redux/dialogs_reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootStoreType} from \"../../redux/redux_store\";\r\n\r\nconst mapStateToProps = (state: RootStoreType) => {\r\n  return {\r\n    messagesPage: state.dialogsReducer,\r\n    newMessageText: state.dialogsReducer.newMessageText\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch<ActionType>) => {\r\n  return {\r\n    addMessage: () => {\r\n      dispatch(addMessageActionCreator())\r\n    },\r\n    changeMessageText: (trimmedValue: string) => {\r\n      dispatch(changeMessageTextActionCreator(trimmedValue))\r\n    }\r\n  }\r\n}\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)\r\n\r\nexport default DialogsContainer;\r\n\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n\twithCredentials: true,\r\n\tbaseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n\theaders: {\r\n\t\t\"API-KEY\": \"1eda0634-107a-4512-9684-9a0c57ff42df\"\r\n\t},\r\n})\r\n\r\nexport const usersAPI = {\r\n\tgetUsers(currentPage: number = 1, pageSize: number = 10) {\r\n\t\treturn  instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n\t\t\t.then(response => response.data) //promises\r\n\t},\r\n\tunFollowedUser(id: number) {\r\n\t\treturn instance.delete(`follow/${id}`)\r\n\t\t\t.then(response => response.data);\r\n\t},\r\n\tfollowedUser(id: number){\r\n\t\treturn instance.post(`follow/${id}`)\r\n\t\t\t.then(response => response.data);\r\n\t},\r\n\tgetProfile(userId: string){\r\n\t\treturn instance.get(`https://social-network.samuraijs.com/api/1.0/profile/`+ userId )\r\n\t\t\t.then(response => response.data);\r\n\t}\r\n}\r\n\r\n/*export const getProfile = (userId: number) => {\r\n\treturn instance.get(`https://social-network.samuraijs.com/api/1.0/profile/`+ userId )\r\n\t\t.then(response => response.data);\r\n}*/\r\n\r\n\r\n/*\r\nexport const getUsers = (currentPage: number = 1, pageSize: number = 10) => {\r\n\t return  instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n\t\t .then(response => response.data) //promises\r\n}\r\nexport const unFollowedUser = (id: number) => {\r\n\treturn instance.delete(`follow/${id}`).then(response => response.data);\r\n}\r\nexport const followedUser = (id: number) => {\r\n\treturn instance.post(`follow/${id}`).then(response => response.data);\r\n}\r\n*/\r\n\r\n","import {usersAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_COUNT = \"SET_TOTAL_COUNT\";\r\nconst TOGGELE_IS_FETCHING = \"TOGGELE_IS_FETCHING\";\r\nconst TOGGELE_IS_FOLLOWING_PROGRESS = \"TOGGELE_IS_FOLLOWING_PROGRESS\";\r\nexport const followSuccess = (userID: number) => {\r\n\treturn {type: FOLLOW, userID} as const\r\n}\r\nexport const unFollowSuccess = (userID: number) => {\r\n\treturn {type: UNFOLLOW, userID} as const\r\n}\r\nexport const setUsers = (users: Array<usersType>) => {\r\n\treturn {type: SET_USERS, users} as const\r\n}\r\nexport const setCurrentPage = (currentPageNumber: number) => {\r\n\treturn {type: SET_CURRENT_PAGE, currentPageNumber} as const\r\n}\r\nexport const setTotalCount = (totalCount: number) => {\r\n\treturn {type: SET_TOTAL_COUNT, totalCount} as const\r\n}\r\nexport const toggleIsFetching = (isFetching: boolean) => {\r\n\treturn {type: TOGGELE_IS_FETCHING, isFetching} as const\r\n}\r\nexport const toggleFollowingProgress = (isFetching: boolean, userID: number) => {\r\n\treturn {type: TOGGELE_IS_FOLLOWING_PROGRESS, isFetching, userID} as const\r\n}\r\nexport const getUsers = (currentPage: number, pageSize: number) => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\tdispatch(toggleIsFetching(true))\r\n\t\tusersAPI.getUsers(currentPage, pageSize).then(data => {\r\n\t\t\t\tdispatch(toggleIsFetching(false))\r\n\t\t\t\tdispatch(setUsers(data.items))\r\n\t\t\t\tdispatch(setTotalCount(data.totalCount))\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n}\r\nexport const follow = (usersID: number) => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\tdispatch(toggleFollowingProgress(true, usersID))\r\n\t\tusersAPI.followedUser(usersID)\r\n\t\t\t.then(data => {\r\n\t\t\t\tif (data.resultCode === 0) {\r\n\t\t\t\t\tdispatch(followSuccess(usersID))\r\n\t\t\t\t}\r\n\t\t\t\tdispatch(toggleFollowingProgress(false, usersID))\r\n\t\t\t})\r\n\t}\r\n}\r\nexport const unFollow = (usersID: number) => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\tdispatch(toggleFollowingProgress(true, usersID))\r\n\t\tusersAPI.unFollowedUser(usersID)\r\n\t\t\t.then(data => {\r\n\t\t\t\tif (data.resultCode === 0) {\r\n\t\t\t\t\tdispatch(unFollowSuccess(usersID))\r\n\t\t\t\t}\r\n\t\t\t\tdispatch(toggleFollowingProgress(false, usersID))\r\n\t\t\t})\r\n\t}\r\n}\r\n\r\nexport type ActionType =\r\n\tReturnType<typeof setUsers> |\r\n\tReturnType<typeof followSuccess> |\r\n\tReturnType<typeof unFollowSuccess> |\r\n\tReturnType<typeof setCurrentPage> |\r\n\tReturnType<typeof setTotalCount> |\r\n\tReturnType<typeof toggleIsFetching> |\r\n\tReturnType<typeof toggleFollowingProgress>\r\nexport type usersType = {\r\n\tname: string\r\n\tid: number\r\n\tphotos: photosType\r\n\tstatus: string | null\r\n\tfollowed: boolean\r\n}\r\ntype photosType = {\r\n\tsmall: string | null\r\n\tlarge: string | null\r\n}\r\nexport type InitialStateType = {\r\n\tusers: Array<usersType>\r\n\tpageSize: number\r\n\ttotalUsersCount: number\r\n\tcurrentPage: number\r\n\tisFetching: boolean\r\n\tfollowingInProgress: Array<number>\r\n}\r\nlet initialState: InitialStateType = {\r\n\tusers: [],\r\n\tpageSize: 20,\r\n\ttotalUsersCount: 20,\r\n\tcurrentPage: 1,\r\n\tisFetching: false,\r\n\tfollowingInProgress: []\r\n}\r\nconst usersReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase FOLLOW:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers: state.users.map(u => {\r\n\t\t\t\t\tif (u.id === action.userID) {\r\n\t\t\t\t\t\treturn {...u, followed: true}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn u\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\tcase UNFOLLOW:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers: state.users.map(u => {\r\n\t\t\t\t\tif (u.id === action.userID) {\r\n\t\t\t\t\t\treturn {...u, followed: false}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn u\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\tcase SET_USERS:\r\n\t\t\treturn {\r\n\t\t\t\t...state, users: action.users\r\n\t\t\t}\r\n\t\tcase SET_CURRENT_PAGE:\r\n\t\t\treturn {\r\n\t\t\t\t...state, currentPage: action.currentPageNumber\r\n\t\t\t}\r\n\t\tcase SET_TOTAL_COUNT:\r\n\t\t\treturn {\r\n\t\t\t\t...state, totalUsersCount: action.totalCount\r\n\t\t\t}\r\n\t\tcase TOGGELE_IS_FETCHING:\r\n\t\t\treturn {\r\n\t\t\t\t...state, isFetching: action.isFetching\r\n\t\t\t}\r\n\t\tcase TOGGELE_IS_FOLLOWING_PROGRESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfollowingInProgress: action.isFetching\r\n\t\t\t\t\t? [...state.followingInProgress, action.userID]\r\n\t\t\t\t\t: state.followingInProgress.filter(id => id !== action.userID)\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\nexport default usersReducer;","export default __webpack_public_path__ + \"static/media/user_Photo.62a5ed40.jpg\";","import React from 'react';\r\nimport style from \"./Users.module.css\";\r\nimport userPhoto from \"../../assect/user_Photo.jpg\";\r\nimport {usersType} from \"../../redux/users_reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype UsersPropsType = {\r\n\ttotalUsersCount: number\r\n\tpageSize: number\r\n\tcurrentPage: number\r\n\tonPageChanged: (currentPageNumber: number) => void\r\n\tusers: Array<usersType>\r\n\tfollowSuccess: (userID: number) => void\r\n\tunFollowSuccess: (userID: number) => void\r\n\tfollowingInProgress: Array<number>\r\n\ttoggleFollowingProgress: (isFetching: boolean, userID:number) => void\r\n}\r\nexport const Users = (props: UsersPropsType) => {\r\n\tlet pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n\tlet pages = []\r\n\tfor (let i = 1; i <= pagesCount; i++) {\r\n\t\tpages.push(i)\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div>\r\n\t\t\t\t{pages.map((p, index) => {\r\n\t\t\t\t\treturn <span key={index} className={props.currentPage === p ? style.selectedPage : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t props.onPageChanged(p)\r\n\t\t\t\t\t\t\t\t\t\t\t }}\r\n\t\t\t\t\t>{p}</span>\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\tprops.users.map(users => <div key={users.id}>\r\n          <span>\r\n            <div>\r\n\t\t\t\t\t\t\t<NavLink to={'/profile/' + users.id}>\r\n\t\t\t\t\t\t\t\t<img className={style.stylePhoto} src={users.photos.small != null ? users.photos.small : userPhoto}\r\n\t\t\t\t\t\t\t\t\t\t alt=\"#\"/>\r\n\t\t\t\t\t\t\t</NavLink>\r\n\r\n            </div>\r\n            <div>\r\n              {\r\n              \tusers.followed\r\n\t\t\t\t\t\t\t\t? <button disabled={props.followingInProgress.some(id => id === users.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {props.unFollowSuccess(users.id)}}>\r\n\t\t\t\t\t\t\t\t\tUnFollow</button>\r\n\t\t\t\t\t\t\t\t: <button disabled={props.followingInProgress.some(id=> id=== users.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {props.followSuccess(users.id)}}>\r\n\t\t\t\t\t\t\t\t\tFollow</button>\r\n              }\r\n            </div>\r\n          </span>\r\n\t\t\t\t\t<span>\r\n            <span>\r\n              <div>\r\n                {users.name}\r\n              </div>\r\n              <div>\r\n                {users.status}\r\n            </div>\r\n            </span>\r\n\t\t\t\t\t\t{/*<span>\r\n              <div>{users.location.country}</div>\r\n              <div>{users.location.city}</div>\r\n            </span>*/}\r\n          </span>\r\n\t\t\t\t</div>)\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}","export default __webpack_public_path__ + \"static/media/preLoader.67b2533e.svg\";","import React from \"react\";\r\nimport preLoader from \"../../assect/preLoader.svg\";\r\n\r\nexport const PreLoader = () => {\r\n\treturn (<div>\r\n\t\t<img src={preLoader} alt=\"#\"/>\r\n\t</div>)\r\n}","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {RootStoreType} from \"../../redux/redux_store\";\r\nimport {\r\n\tfollowSuccess,\r\n\tgetUsers,\r\n\tsetCurrentPage,\r\n\ttoggleFollowingProgress,\r\n\tunFollowSuccess,\r\n\tusersType\r\n} from \"../../redux/users_reducer\";\r\nimport {Users} from \"./Users\";\r\nimport {PreLoader} from \"../../common/PreLoader/PreLoader\";\r\n\r\ntype usersPropsType = {\r\n\tusers: Array<usersType>\r\n\tpageSize: number\r\n\ttotalUsersCount: number\r\n\tcurrentPage: number\r\n\tfollowSuccess: (userID: number) => void\r\n\tunFollowSuccess: (userID: number) => void\r\n\t//setUsers: (users: Array<usersType>) => void\r\n\tsetCurrentPage: (currentPageNumber: number) => void\r\n\t//setTotalCount: (totalCount: number) => void\r\n\tisFetching: boolean\r\n\tfollowingInProgress: Array<number>\r\n\ttoggleFollowingProgress: (isFetching: boolean, userID: number) => void\r\n\t//toggleIsFetching: (isFetching: boolean) => void\r\n\tgetUsers: (currentPage: number, pageSize: number) => void\r\n}\r\n\r\nclass UsersContainer extends React.Component<usersPropsType, {}> {\r\n\tcomponentDidMount() {\r\n\t\tthis.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n\t}\r\n\r\n\tonPageChanged = (currentPageNumber: number) => {\r\n\t\tthis.props.getUsers(currentPageNumber, this.props.pageSize)\r\n\t\t/*this.props.setCurrentPage(currentPageNumber)\r\n\t\tthis.props.toggleIsFetching(true)\r\n\t\tusersAPI.getUsers(currentPageNumber, this.props.pageSize).then(data => {\r\n\t\t\t\tthis.props.toggleIsFetching(false)\r\n\t\t\t\tthis.props.setUsers(data.items)\r\n\t\t\t}\r\n\t\t)*/\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn <>\r\n\t\t\t{this.props.isFetching ? <PreLoader/> : null}\r\n\t\t\t<Users totalUsersCount={this.props.totalUsersCount}\r\n\t\t\t\t\t\t pageSize={this.props.pageSize}\r\n\t\t\t\t\t\t currentPage={this.props.currentPage}\r\n\t\t\t\t\t\t onPageChanged={this.onPageChanged}\r\n\t\t\t\t\t\t users={this.props.users}\r\n\t\t\t\t\t\t followSuccess={this.props.followSuccess}\r\n\t\t\t\t\t\t unFollowSuccess={this.props.unFollowSuccess}\r\n\t\t\t\t\t\t followingInProgress={this.props.followingInProgress}\r\n\t\t\t\t\t\t toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n\t\t\t/>\r\n\t\t</>\r\n\t}\r\n}\r\nconst mapStateToProps = (state: RootStoreType) => {\r\n\treturn {\r\n\t\tusers: state.usersReducer.users,\r\n\t\tpageSize: state.usersReducer.pageSize,\r\n\t\ttotalUsersCount: state.usersReducer.totalUsersCount,\r\n\t\tcurrentPage: state.usersReducer.currentPage,\r\n\t\tisFetching: state.usersReducer.isFetching,\r\n\t\tfollowingInProgress: state.usersReducer.followingInProgress\r\n\t}\r\n}\r\nexport default connect(mapStateToProps, {\r\n\t\tfollowSuccess,\r\n\t\tunFollowSuccess,\r\n\t\tsetCurrentPage,\r\n\t\ttoggleFollowingProgress,\r\n\t\tgetUsers\r\n\t}\r\n)(UsersContainer)","import React from 'react';\r\nimport style from './DescriptionBlock.module.css';\r\nimport {ProfilePageTypeAPI} from \"../../../redux/profile_reducer\";\r\nimport userPhoto from \"../../../assect/user_Photo.jpg\";\r\n\r\ntype PropsType = {\r\n\tprofile: Array<ProfilePageTypeAPI>\r\n}\r\nexport const ProfileInfo = (props: PropsType) => {\r\n\treturn <div className={style.wrapperDescription}>\r\n\t\t<h1 className={style.styleH1}>----Profile----</h1>\r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\t\tprops.profile.map((prof, index) =>\r\n\t\t\t\t\t<div key={index}>\r\n\t\t\t\t\t\t{prof.fullName}\r\n\t\t\t\t\t\t<div>{prof.aboutMe}</div>\r\n\t\t\t\t\t\t<div>{prof.contacts.facebook}</div>\r\n\t\t\t\t\t\t<div>{prof.contacts.instagram}</div>\r\n\t\t\t\t\t\t<img className={style.avatar} src={prof.photos.small != null ? prof.photos.small : userPhoto} alt=\"#\"/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t)}\r\n\t\t\t<img className={style.avatar} alt=\"ava\"\r\n\t\t\t\t\t src='https://pm1.narvii.com/7171/f6f1c4463bbd9959052b699672858647f17660d3r1-264-250v2_00.jpg'/>\r\n\t\t</div>\r\n\t\t<div className={style.description}>\r\n\t\t\tDescription\r\n\t\t</div>\r\n\t</div>\r\n}\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = \"ADD_POST\";\r\nconst CHANGE_POST_TEXT = \"CHANGE_POST_TEXT\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nexport const addPostActionCreator = () => {\r\n\treturn {type: ADD_POST} as const\r\n}\r\nexport const changePostTextActionCreator = (valueTextarea: string) => {\r\n\treturn {type: CHANGE_POST_TEXT, newPostText: valueTextarea} as const\r\n}\r\nexport const setUserProfile = (profile: any) => {\r\n\treturn {type: SET_USER_PROFILE, profile} as const\r\n}\r\nexport const getProfile = (userId: string) => {\r\n\treturn (dispatch: Dispatch) => {\r\n\t\tusersAPI.getProfile(userId).then(data => {\r\n\t\t\tdispatch(setUserProfile(data))\r\n\t\t})\r\n\t}\r\n}\r\nexport type ActionType =\r\n\tReturnType<typeof addPostActionCreator> |\r\n\tReturnType<typeof changePostTextActionCreator> |\r\n\tReturnType<typeof setUserProfile>\r\ntype PostType = {\r\n\tid: number\r\n\tmessage: string\r\n\tlikesCount: number\r\n}\r\nexport type ProfilePageTypeAPI = {\r\n\taboutMe: string\r\n\tcontacts: ContactsType\r\n\tlookingForAJob: boolean\r\n\tlookingForAJobDescription: string\r\n\tfullName: string\r\n\tuserId: number\r\n\tphotos: PhotosType\r\n}\r\ntype ContactsType = {\r\n\tfacebook: string\r\n\twebsite: null\r\n\tvk: string\r\n\ttwitter: string\r\n\tinstagram: string\r\n\tyoutube: null\r\n\tgithub: string\r\n\tmainLink: null\r\n}\r\ntype PhotosType = {\r\n\tsmall: string | null\r\n\tlarge: string | null\r\n}\r\ntype InitialStateType = {\r\n\tposts: Array<PostType>\r\n\tnewPostText: string\r\n\tprofile: Array<ProfilePageTypeAPI>\r\n}\r\nlet initialState = {\r\n\tposts: [\r\n\t\t{id: 1, message: \"My first post!\", likesCount: 41},\r\n\t\t{id: 2, message: \"Second post\", likesCount: 22},\r\n\t\t{id: 3, message: 'I live React', likesCount: 31},\r\n\t\t{id: 4, message: \"Awesome!!!\", likesCount: 421}\r\n\t],\r\n\tnewPostText: \"\",\r\n\tprofile: [/*\r\n\t\t{\r\n\t\taboutMe: \"я круто чувак 1001%\",\r\n\t\tcontacts: {\r\n\t\t\tfacebook: \"facebook.com\",\r\n\t\t\twebsite: null,\r\n\t\t\tvk: \"vk.com/dimych\",\r\n\t\t\ttwitter: \"https://twitter.com/@sdf\",\r\n\t\t\tinstagram: \"instagra.com/sds\",\r\n\t\t\tyoutube: null,\r\n\t\t\tgithub: \"github.com\",\r\n\t\t\tmainLink: null\r\n\t\t},\r\n\t\tlookingForAJob: true,\r\n\t\tlookingForAJobDescription: \"не ищу, а дурачусь\",\r\n\t\tfullName: \"samurai dimych\",\r\n\t\tuserId: 2,\r\n\t\tphotos: {\r\n\t\t\tsmall: \"https://social-network.samuraijs.com/activecontent/images/users/2/user-small.jpg?v=0\",\r\n\t\t\tlarge: \"https://social-network.samuraijs.com/activecontent/images/users/2/user.jpg?v=0\"\r\n\t\t},}*/]\r\n}\r\nconst profileReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase ADD_POST: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tposts: [...state.posts, {id: 5, message: state.newPostText, likesCount: 0}]\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase CHANGE_POST_TEXT: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tnewPostText: action.newPostText\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SET_USER_PROFILE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state, profile: [action.profile]\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\nexport default profileReducer;","import React from 'react';\r\nimport style from './Post.module.css';\r\n\r\ntype PostPropsType={\r\n    message:string\r\n    likesCount:number\r\n}\r\nconst Post = (props: PostPropsType) => {\r\n    return (\r\n      <div className={style.wrapperItemCard}>\r\n        <img className={style.avatar} alt=\"ava\"\r\n             src='https://pm1.narvii.com/7171/f6f1c4463bbd9959052b699672858647f17660d3r1-264-250v2_00.jpg'/>\r\n        <span className={style.message} >{props.message}</span>\r\n        <div className={style.wrapperLike} >\r\n            <span>{props.likesCount} Like</span>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\nexport default Post","import React, {Dispatch} from 'react';\r\nimport {PostType} from '../../../redux/store';\r\nimport {addPostActionCreator, changePostTextActionCreator} from \"../../../redux/profile_reducer\";\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootStoreType} from \"../../../redux/redux_store\";\r\n\r\ntype MSTPType = {\r\n  posts: Array<PostType>\r\n  newPostText: string\r\n}\r\n\r\ntype MDTPType = {\r\n  addPostActionCreator: () => void\r\n  changePostText: (text: string) => void\r\n}\r\n\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>): MDTPType => {\r\n  return {\r\n    addPostActionCreator: () => {\r\n      dispatch(addPostActionCreator())\r\n    },\r\n    changePostText: (text: string) => {\r\n      dispatch(changePostTextActionCreator(text))\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: RootStoreType): MSTPType => {\r\n  return {\r\n    posts: state.profileReducer.posts,\r\n    newPostText: state.profileReducer.newPostText\r\n  }\r\n}\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\n","import React, {ChangeEvent} from 'react';\r\nimport style from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {PostType} from '../../../redux/store';\r\n\r\ntype MyPostsPropsType={\r\n  newPostText: string\r\n  posts:PostType[]\r\n  changePostText: (text: string) => void\r\n  addPostActionCreator: () => void\r\n}\r\n\r\nexport const MyPosts = (props:MyPostsPropsType) => {\r\n  let postsElement = props.posts.map(post => <Post key={post.id} message={post.message} likesCount={post.likesCount}/>)\r\n\r\n  let onNewPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n    let body = e.currentTarget.value\r\n    props.changePostText(body)\r\n  }\r\n\r\n  return <div className={style.wrapperItem}>\r\n    <h3 className={style.styleH3}>----My posts----</h3>\r\n    <div className={style.postAdding}>\r\n\r\n      <textarea value={props.newPostText}\r\n                onChange={onNewPostChange}\r\n                placeholder={\"Накарябай пост =)\"}/>\r\n      <button onClick={props.addPostActionCreator}>Add post</button>\r\n    </div>\r\n    {postsElement}\r\n  </div>\r\n}\r\n\r\n","import React from 'react';\r\nimport style from './Profile.module.css';\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfilePropsType} from \"./ProfileContainer\";\r\n\r\nconst Profile = (props: ProfilePropsType) => {\r\n\r\n\treturn <div className={style.wrapperProfile}>\r\n\t\t<ProfileInfo profile={props.profile} />\r\n\t\t<MyPostsContainer/>\r\n\t</div>\r\n}\r\nexport default Profile","import React, {ReactNode} from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootStoreType} from \"../../redux/redux_store\";\r\nimport {getProfile, ProfilePageTypeAPI, setUserProfile} from \"../../redux/profile_reducer\";\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\r\n\r\nexport interface ProfilePropsType extends RouteComponentProps<{ userId: string }> {\r\n\tchildren?: ReactNode\r\n\tprofile: Array<ProfilePageTypeAPI>\r\n\tsetUserProfile: (profile: any) => void\r\n\tgetProfile: (userId: string) => void\r\n}\r\nclass ProfileContainer extends React.Component<ProfilePropsType> {\r\n\tcomponentDidMount() {\r\n\t\tlet userId = this.props.match.params.userId\r\n\t\tif (!userId) {\r\n\t\t\tuserId = \"1\"\r\n\t\t}\r\n\t\tthis.props.getProfile(userId)\r\n\t\t/*\tlet userId = this.props.match.params.userId\r\n\t\t\tif (!userId) {\r\n\t\t\t\tuserId = \"1\"\r\n\t\t\t}\r\n\t\t\tusersAPI.getProfile(userId).then(data => {\r\n\t\t\t\tthis.props.setUserProfile(data)\r\n\t\t\t})*/\r\n\t\t/*axios\r\n\t\t\t.get(`https://social-network.samuraijs.com/api/1.0/profile/`+ userId )\r\n\t\t\t.then(response => {\r\n\t\t\t\tthis.props.setUserProfile(response.data)\r\n\t\t\t\tconsole.log(response)\r\n\t\t\t});*/\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Profile {...this.props} profile={this.props.profile} setUserProfile={setUserProfile}/>\r\n\t\t)\r\n\t}\r\n}\r\nconst mapStateToProps = (state: RootStoreType) => ({\r\n\tprofile: state.profileReducer.profile\r\n})\r\nconst WithUrlDataContainerComponent = withRouter<ProfilePropsType & RouteComponentProps, any>(ProfileContainer)\r\nexport default connect(mapStateToProps, {setUserProfile, getProfile})(WithUrlDataContainerComponent)","import React from 'react';\r\nimport style from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {HeaderPropsType} from \"./HeaderContainer\";\r\n\r\nexport const Header: React.FunctionComponent<HeaderPropsType> = ({login, isAuth}) => {\r\n\treturn <header className={style.wrapperHeader}>\r\n\t\t<img className={style.img} alt='logo'\r\n\t\t\t\t src={\"https://i.pinimg.com/564x/81/cb/9c/81cb9cf335d5cbcf74d093ff869fe92e.jpg\"}/>\r\n\t\t<div className={style.loginBlock}>\r\n\t\t\t{ isAuth ?  <span className={style.info} >{login}</span> : <NavLink to={\"/login\"}>Login</NavLink> }\r\n\t\t\t{/*<NavLink to={\"/login\"}>Login</NavLink>\r\n\t\t\t<div className={style.info}>\r\n\t\t\t\t<span>{login}/</span>\r\n\t\t\t\t<span>{email}/</span>\r\n\t\t\t\t<span>{userId}</span>\r\n\t\t\t</div>\r\n\t\t\t<div></div>*/}\r\n\t\t</div>\r\n\t</header>;\r\n}\r\nexport default Header","const SET_USER_DATA = \"SET_USER_DATA\"\r\n\r\nexport const setUserData = (userId: number | null, email: string | null, login: string | null) => {\r\n\treturn {type: SET_USER_DATA, data: {userId, email, login} } as const\r\n}\r\nexport type ActionType =\r\n\tReturnType<typeof setUserData>\r\n\r\nexport type InitialStateType = {\r\n\tuserId: number | null\r\n\temail: string | null\r\n\tlogin: string | null\r\n\tisAuth: boolean\r\n}\r\nlet initialState: InitialStateType = {\r\n\tuserId: null,\r\n\temail: null,\r\n\tlogin: null,\r\n\tisAuth: false\r\n}\r\nconst authReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_USER_DATA: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action.data,\r\n\t\t\t\tisAuth: true\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\nexport default authReducer;","import React, {ReactNode} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Header from './Header';\r\nimport axios from \"axios\"\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {setUserData} from \"../../redux/auth_reducer\";\r\nimport {RootStoreType} from \"../../redux/redux_store\";\r\n\r\nexport interface HeaderPropsType extends RouteComponentProps<any> {\r\n\tsetUserData: (userId: number | null, email: string | null, login: string | null) => void\r\n\tchildren?: ReactNode\r\n\tlogin: string | null\r\n\tuserId: number | null\r\n\temail: string | null\r\n\tisAuth: boolean\r\n}\r\n\r\nexport class HeaderContainer extends React.Component<HeaderPropsType, {}> {\r\n\tcomponentDidMount() {\r\n\t\taxios\r\n\t\t\t.get(`https://social-network.samuraijs.com/api/1.0/auth/me`, {\r\n\t\t\t\twithCredentials: true\r\n\t\t\t})\r\n\t\t\t.then(response => {\r\n\t\t\t\tif (response.data.resultCode === 0) {\r\n\t\t\t\t\tlet {userId, email, login} = response.data.data\r\n\t\t\t\t\tthis.props.setUserData(userId, email, login)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn <>\r\n\t\t\t<Header {...this.props} />\r\n\t\t</>\r\n\t}\r\n}\r\nconst mapStateToProps = (state: RootStoreType) => ({\r\n\tlogin: state.auth.login,\r\n\temail: state.auth.email,\r\n\tuserId: state.auth.userId,\r\n\tisAuth: state.auth.isAuth\r\n})\r\nconst WithUrlDataContainerComponent = withRouter<HeaderPropsType & RouteComponentProps, any>(HeaderContainer)\r\nexport default connect(mapStateToProps, {setUserData})(WithUrlDataContainerComponent)\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from \"./Components/NavBar/NavBar\";\r\nimport {Route} from 'react-router-dom';\r\nimport DialogsContainer from './Components/Dialogs/DialogsContainer';\r\nimport UsersContainer from \"./Components/Users/UsersContainer\";\r\nimport ProfileContainer from \"./Components/Profile/ProfileContainer\";\r\nimport HeaderContainer from './Components/Header/HeaderContainer';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className='app_wrapper'>\r\n      <HeaderContainer/>\r\n      <Navbar/>\r\n      <div className=\"app_wrapper_content\">\r\n        <Route path='/dialogs' render={() => <DialogsContainer/>}\r\n        />\r\n        <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\r\n        <Route path='/users' render={() => <UsersContainer/>}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","type AsideFriendsType = {\r\n  id: number\r\n  avatar: string\r\n  name: string\r\n}\r\n\r\ntype AsideStateType = {\r\n  asideFriends: Array<AsideFriendsType>\r\n}\r\n\r\nexport type InitialStateType = {\r\n  asideState: AsideStateType\r\n}\r\n\r\nlet initialState: InitialStateType = {\r\n  asideState: {\r\n    asideFriends: [\r\n      {id: 1,\r\n        avatar: 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcT6Ghz_3vVX362NspWGVByszfbkVlJ77tisTQ&usqp=CAU',\r\n        name: 'Pavel'}, {id: 2,\r\n        avatar: 'https://klike.net/uploads/posts/2019-03/1551511801_1.jpg',\r\n        name: 'Vika'}, {id: 3,\r\n        avatar: 'https://tiktok-wiki.ru/wp-content/uploads/2020/05/avatarki-dlya-tik-toka1.jpg',\r\n        name: 'Alex'}\r\n    ]\r\n  }\r\n}\r\n\r\nconst sideBarReducer = (state: InitialStateType = initialState): InitialStateType => {\r\n  return {\r\n    ...state\r\n  }\r\n}\r\n\r\nexport default sideBarReducer","import { createStore, combineReducers, applyMiddleware} from \"redux\";\r\nimport dialogsReducer from \"./dialogs_reducer\";\r\nimport profileReducer from \"./profile_reducer\";\r\nimport sideBarReducer from \"./SideBar_reducer\";\r\nimport usersReducer from \"./users_reducer\";\r\nimport  thunkMiddleware  from \"redux-thunk\"\r\nimport authReducer from \"./auth_reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    dialogsReducer: dialogsReducer,\r\n    profileReducer: profileReducer,\r\n    sideBarReducer: sideBarReducer,\r\n    usersReducer: usersReducer,\r\n    auth: authReducer\r\n})\r\n\r\nexport type RootStoreType = ReturnType<typeof reducers>\r\n\r\nexport let store = createStore(reducers, applyMiddleware(thunkMiddleware))","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from './redux/redux_store';\r\n\r\nReactDOM.render(\r\n\t<BrowserRouter>\r\n\t\t<Provider store={store}>\r\n\t\t\t<App/>\r\n\t\t</Provider>\r\n\t</BrowserRouter>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n\r\n\r\n"],"sourceRoot":""}