{"version":3,"sources":["Components/Dialogs/Dialogs.module.css","Components/Dialogs/DialogItem/DialogItem.module.css","Components/Dialogs/DialogItem/DialogItem.tsx","Components/Dialogs/Messages/Messages.tsx","Components/Dialogs/DialogsMessageTextarea.tsx","Components/Dialogs/DialogsMessageContainer.tsx","Components/Dialogs/Dialogs.tsx","Components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","DialogItem","props","className","style","wrapperName","activeClassName","activeLink","to","id","name","Messages","message","maxLength10","maxLengthCreator","MessageReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","type","component","Textarea","validate","required","placeholder","connect","state","newMessageText","dialogsReducer","addMessage","changeMessageText","formData","console","log","Dialogs","dialogsElement","messagesPage","dialogs","map","dialog","messagesElement","messages","dialogItems","wrapperTextForm","DialogsMessageContainer","compose","auth","isAuth","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,gBAAkB,mC,oBCA3ND,EAAOC,QAAU,CAAC,YAAc,gCAAgC,WAAa,iC,oFCiB9DC,EARI,SAACC,GAClB,OACE,qBAAKC,UAAWC,IAAMC,YAAtB,SACE,cAAC,IAAD,CAASC,gBAAiBF,IAAMG,WAAaC,GAAI,YAAcN,EAAMO,GAArE,SAA0EP,EAAMQ,U,kBCEvEC,EARE,SAACT,GAChB,OACE,8BACE,qBAAKC,UAAWC,IAAMQ,QAAtB,SAAgCV,EAAMU,a,wDCLtCC,EAAcC,YAAiB,IA8C/BC,EAAmBC,YAAwB,CAACC,KAAM,WAA/BD,EAlBsC,SAAC,GAI1D,IAFJE,EAEG,EAFHA,aAGD,OACC,uBAAMC,SAAUD,EAAhB,UACC,cAACE,EAAA,EAAD,CACCC,KAAK,OACLX,KAAM,UACNY,UAAWC,IACXC,SAAU,CAACC,IAAUZ,GACrBa,YAAa,iBAEd,uD,SCnCYC,eAJS,SAACC,GAAD,MAA2B,CAClDC,eAAgBD,EAAME,eAAeD,kBAGE,CAACE,eAAYC,uBAAtCL,EDG6C,SAAC,GAIvD,IAFJI,EAEG,EAFHA,WAAe7B,EAEZ,8BAQJ,OACC,8BACC,cAACa,EAAD,aAAkBI,SAPH,SAACc,GACjBF,EAAWE,EAASrB,SACpBqB,EAASrB,QAAU,GACnBsB,QAAQC,IAAIF,KAI+B/B,SEU9BkC,EAvBC,SAAClC,GACf,IAAImC,EAAiBnC,EAAMoC,aAAaC,QAAQC,KAAI,SAAAC,GAAM,OAAI,cAAC,EAAD,CAA4B/B,KAAM+B,EAAO/B,KAAMD,GAAIgC,EAAOhC,IAAzCgC,EAAOhC,OAElFiC,EAAkBxC,EAAMoC,aAAaK,SAASH,KAAI,SAAA5B,GAAO,OAAI,cAAC,EAAD,CAA2BA,QAASA,EAAQA,SAA7BA,EAAQH,OAExF,OACE,sBAAKN,UAAWC,IAAMmC,QAAtB,UAEE,qBAAKpC,UAAWC,IAAMwC,YAAtB,SACGP,IAGH,sBAAKlC,UAAWC,IAAMuC,SAAtB,UACGD,EACD,8BACE,qBAAKvC,UAAWC,IAAMyC,gBAAtB,SACE,cAACC,EAAD,e,gBChBGC,sBACbpB,aATsB,SAACC,GACvB,MAAO,CACLU,aAAcV,EAAME,eACpBD,eAAgBD,EAAME,eAAeD,eACrCmB,KAAMpB,EAAMoB,KAAKC,UAKM,CAAClB,eAAWC,wBACrCkB,IAFaH,CAGbX","file":"static/js/3.5246bfe0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__347uQ\",\"dialogItems\":\"Dialogs_dialogItems__1RDve\",\"active\":\"Dialogs_active__2z-Zc\",\"messages\":\"Dialogs_messages__35xug\",\"message\":\"Dialogs_message__fYzum\",\"wrapperTextForm\":\"Dialogs_wrapperTextForm__3dgjv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperName\":\"DialogItem_wrapperName__jGLlq\",\"activeLink\":\"DialogItem_activeLink__EE8_V\"};","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport style from \"./DialogItem.module.css\"\r\n\r\ntype DialogItemPropsType = {\r\n  name: string\r\n  id: number\r\n}\r\n\r\n\r\nconst DialogItem = (props: DialogItemPropsType) => {\r\n  return (\r\n    <div className={style.wrapperName}>\r\n      <NavLink activeClassName={style.activeLink}  to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem","import React from \"react\";\r\nimport style from './../Dialogs.module.css';\r\n\r\n\r\ntype MessagesPropsType = {\r\n  message: string\r\n}\r\nconst Messages = (props: MessagesPropsType) => {\r\n  return (\r\n    <div>\r\n      <div className={style.message}>{props.message}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Messages","import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/vaidators\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\ntype formDataType = {\r\n\tmessage: string\r\n}\r\ntype IPropsType = {\r\n\tnewMessageText: string\r\n\tchangeMessageText: (trimmedValue: string) => void\r\n\taddMessage: ( messageText: string ) => void\r\n}\r\nexport const DialogsMessageTextarea: React.FC<IPropsType> = (\r\n\t{\r\n\t\taddMessage, ...props\r\n\t}\r\n) => {\r\n\r\n\r\n\tconst onSubmit = (formData: formDataType) => {\r\n\t\taddMessage(formData.message)\r\n\t\tformData.message = ''\r\n\t\tconsole.log(formData)\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<MessageReduxForm onSubmit={onSubmit} {...props} />\r\n\t\t</div>\r\n\t)\r\n}\r\nconst MessageForm: React.FC<InjectedFormProps<formDataType>> = (\r\n\t{\r\n\t\thandleSubmit\r\n\t}\r\n) => {\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<Field\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tname={'message'}\r\n\t\t\t\tcomponent={Textarea}\r\n\t\t\t\tvalidate={[required, maxLength10]}\r\n\t\t\t\tplaceholder={'Message text'}\r\n\t\t\t/>\r\n\t\t\t<button>Add message</button>\r\n\t\t</form>\r\n\t)\r\n}\r\nconst MessageReduxForm = reduxForm<formDataType>({form: \"message\"})(MessageForm)","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {RootStoreType} from \"../../redux/redux_store\";\r\nimport {DialogsMessageTextarea} from \"./DialogsMessageTextarea\";\r\nimport {addMessage, changeMessageText} from \"../../redux/dialogs_reducer\";\r\n\r\n\r\n\r\nconst mapStateToProps = (state: RootStoreType) => ({\r\n\tnewMessageText: state.dialogsReducer.newMessageText,\r\n})\r\n\r\nexport default connect(mapStateToProps, {addMessage, changeMessageText})(DialogsMessageTextarea)","import React from \"react\"\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Messages from \"./Messages/Messages\";\r\nimport {MessagesPageType} from \"../../redux/store\";\r\nimport style from \"./Dialogs.module.css\"\r\nimport DialogsMessageContainer from \"./DialogsMessageContainer\";\r\n\r\nexport type DialogsPropsType = {\r\n  messagesPage: MessagesPageType\r\n  newMessageText: string\r\n  addMessage: () => void\r\n  changeMessageText: (trimmedValue: string) => void\r\n  auth: boolean\r\n}\r\n\r\n\r\nconst Dialogs = (props: DialogsPropsType) => {\r\n  let dialogsElement = props.messagesPage.dialogs.map(dialog => <DialogItem key={dialog.id} name={dialog.name} id={dialog.id}/>)\r\n\r\n  let messagesElement = props.messagesPage.messages.map(message => <Messages key={message.id} message={message.message}/>)\r\n\r\n  return (\r\n    <div className={style.dialogs}>\r\n\r\n      <div className={style.dialogItems}>\r\n        {dialogsElement}\r\n      </div>\r\n\r\n      <div className={style.messages}>\r\n        {messagesElement}\r\n        <div>\r\n          <div className={style.wrapperTextForm}>\r\n            <DialogsMessageContainer/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Dialogs","import React from \"react\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootStoreType} from \"../../redux/redux_store\";\r\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {addMessage, changeMessageText} from \"../../redux/dialogs_reducer\";\r\n\r\nconst mapStateToProps = (state: RootStoreType) => {\r\n  return {\r\n    messagesPage: state.dialogsReducer,\r\n    newMessageText: state.dialogsReducer.newMessageText,\r\n    auth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n  connect(mapStateToProps, {addMessage,changeMessageText }),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n\r\n"],"sourceRoot":""}